<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Zbang.Zbox.ViewModel"
                   namespace="Zbang.Zbox.ViewModel.DTOs">

 
  <!--<query name="GetFlatBoxTags">
    <![CDATA[
     select t.Name as Name from Box b join b.Tags t where b.Id = :BoxId
    ]]>
  </query>
  <sql-query name="GetTags">
    <![CDATA[
    select t.Name
    from zbox.userboxrel ub 
    join zbox.Box b on b.BoxId = ub.BoxId and b.IsDeleted = 0
    join zbox.BoxTag2 bt on bt.BoxId = b.BoxId
    join zbox.Tag2 t on t.TagId = bt.TagId
    where UserId = :UserId
    and t.Name like '%' + :prefix + '%'
    ]]>
  </sql-query>-->
  <!--select  t.Name as Name from Tag t where t.Name like '%' || :prefix || '%'-->

  <!--<sql-query name="ZboxGetUserTags">    
    <![CDATA[    
      select  t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
      from Zbox.box b, zbox.UserBoxRel ub
      where 
      b.IsDeleted = 0   
      and b.BoxId = ub.BoxId
      and ub.UserType in (2,3)
      and b.PrivacySetting >  case when ub.userType = 2 then 0 else -1  end
      and ub.UserId = :UserId)
      group by t.Name
      order by tagCount desc
    ]]>
  </sql-query>
  
  <sql-query name="ZboxGetUserTagsWithSearch">
    <![CDATA[
      select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
      from Zbox.box b, zbox.UserBoxRel ub
      where 
      b.IsDeleted = 0   
      and b.BoxId = ub.BoxId
      and b.BoxName like '%' + :SearchText + '%'
      and ub.UserType in (2,3)
      and b.PrivacySetting >  case when ub.userType = 2 then 0 else -1  end
      and ub.UserId = :UserId)
      group by t.Name
	    order by tagCount desc
      
    ]]>
  </sql-query>
  <sql-query name="ZboxGetUserRelevantTags">
    <![CDATA[
    select t2.name as Name, COUNT(1) as tagCount 
    from zbox.Tag2 t2, zbox.BoxTag2 bt2 where t2.TagId = bt2.TagId and bt2.BoxId in (
      select b.BoxId
      from Zbox.box b, zbox.UserBoxRel ub, zbox.BoxTag2 bt, zbox.Tag2 t
      where
       b.IsDeleted = 0   
      and b.BoxId = ub.BoxId
      and ub.UserType in (2,3)
      and b.PrivacySetting >  case when ub.userType = 2 then 0 else -1  end
      and ub.UserId = :UserId   
         
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.Uid, b.BoxName,b.PrivacySetting,b.UpdateTime,    ub.UserType, b.BoxId 
       having COUNT( b.Uid) = :TagsCount)
      group by t2.Name
	    order by tagCount desc
    ]]>
  </sql-query>
  <sql-query name="ZboxGetUserRelevantTagsWithSearch">
    <![CDATA[
    select t2.name as Name, COUNT(1) as tagCount from zbox.Tag2 t2, zbox.BoxTag2 bt2 where t2.TagId = bt2.TagId and bt2.BoxId in (
      select b.BoxId
      from Zbox.box b, zbox.UserBoxRel ub, zbox.BoxTag2 bt, zbox.Tag2 t
      where
       b.IsDeleted = 0   
      and b.BoxId = ub.BoxId
      and ub.UserType in (2,3)
      and b.PrivacySetting >  case when ub.userType = 2 then 0 else -1  end
      and ub.UserId = :UserId   
      and b.BoxName like '%' + :SearchText + '%'   
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.Uid, b.BoxName,b.PrivacySetting,b.UpdateTime,    ub.UserType, b.BoxId 
       having COUNT( b.Uid) = :TagsCount)
       group by t2.Name
	    order by tagCount desc
    ]]>
  </sql-query>
  <sql-query name="ZboxGetFriendsTags">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
      and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId)
      group by t.Name
	    order by tagCount desc
     ]]>
  </sql-query>
  <sql-query name="PageZboxGetFriendsTags">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId from zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
     and b.IsDeleted = 0
     and b.PrivacySetting = 3
     union 
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
      and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId)
      group by t.Name
	    order by tagCount desc
     ]]>
  </sql-query>
  <sql-query name="ZboxGetFriendsTagsWithSearch">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxName like '%' + :SearchText + '%'  
     and b.BoxId = ub.BoxId
       and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId)
      group by t.Name
	    order by tagCount desc
     ]]>
  </sql-query>
  <sql-query name="PageZboxGetFriendsTagsWithSearch">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
        select b.BoxId from 
        zbox.Box b
        join zbox.UserBoxRel ub on b.BoxId = ub.BoxId
        join zbox.Friend f on ub.UserId = f.MyFriendId
        left join zbox.BoxTag2 bt on bt.boxid = b.boxid
        left join zbox.Tag2 t on bt.tagid = t.tagid
        where 
        f.OwnerId = :UserId
        and ub.UserId = :FriendId
        and (b.BoxName like '%' + :SearchText + '%' or t.Name like '%' + :SearchText + '%')   
        and b.IsDeleted = 0
        and b.PrivacySetting = 3
        union 
        select b.BoxId
        from 
        zbox.Box b
        join zbox.UserBoxRel ub on b.BoxId = ub.BoxId
        join zbox.Friend f on ub.UserId = f.MyFriendId
        join zbox.UserBoxRel ub2 on ub.BoxId = ub2.BoxId
        left join zbox.BoxTag2 bt on bt.boxid = b.boxid
        left join zbox.Tag2 t on bt.tagid = t.tagid
        where 
        f.OwnerId = :UserId
        and ub.UserId = :FriendId
        and (b.BoxName like '%' + :SearchText + '%' or t.Name like '%' + :SearchText + '%')  

        and b.PrivacySetting !=0
        and ub.UserType in (2,3)
        and b.IsDeleted = 0

        and ub2.UserId = f.OwnerId)
      group by t.Name
	    order by tagCount desc
     ]]>
  </sql-query>
  <sql-query name="ZboxGetFriendsRelevantTags">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2, zbox.BoxTag2 bt, zbox.Tag2 t
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
       and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.BoxId
       having COUNT( b.Uid) = :TagsCount)
        group by t.Name
	    order by tagCount desc
    ]]>
  </sql-query>
  <sql-query name="PageZboxGetFriendsRelevantTags">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId from zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.BoxTag2 bt, zbox.Tag2 t
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
     and b.IsDeleted = 0
     and b.PrivacySetting = 3
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.BoxId
       having COUNT( b.Uid) = :TagsCount
     union 
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2, zbox.BoxTag2 bt, zbox.Tag2 t
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxId = ub.BoxId
       and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.BoxId
       having COUNT( b.Uid) = :TagsCount)
        group by t.Name
	    order by tagCount desc
    ]]>
  </sql-query>
  <sql-query name="ZboxGetFriendsRelevantTagsWithSearch">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
      select b.BoxId
       from 
     zbox.Box b, zbox.UserBoxRel ub, zbox.Friend f, zbox.UserBoxRel ub2, zbox.BoxTag2 bt, zbox.Tag2 t
     where ub.UserId = f.MyFriendId
     and f.OwnerId = :UserId
     and ub.UserId = :FriendId
     and b.BoxName like '%' + :SearchText + '%'  
     and b.BoxId = ub.BoxId
       and b.PrivacySetting !=0
      and ub.UserType in (2,3)
     and b.IsDeleted = 0
     and ub.BoxId = ub2.BoxId
     and ub2.UserId = f.OwnerId
      and b.BoxId = bt.BoxId 
      and bt.TagId = t.TagId
      and t.Name in (:Tags)
       group by b.BoxId
       having COUNT( b.Uid) = :TagsCount)
      group by t.Name
	    order by tagCount desc
    ]]>
  </sql-query>
  <sql-query name="PageZboxGetFriendsRelevantTagsWithSearch">
    <![CDATA[
     select t.name as Name, COUNT(1) as tagCount from zbox.BoxTag2 bt, zbox.Tag2 t
      where  t.TagId = bt.TagId
      and bt.BoxId in (
        select b.BoxId 
        from zbox.Box b
        join zbox.UserBoxRel ub on b.BoxId = ub.BoxId
        join zbox.Friend f on ub.UserId = f.MyFriendId
        join zbox.BoxTag2 bt on b.BoxId = bt.BoxId 
        join zbox.Tag2 t on bt.TagId = t.TagId
        left join zbox.BoxTag2 bt2 on bt2.boxid = b.boxid
        left join zbox.Tag2 t2 on bt2.tagid = t.tagid
        where 
        f.OwnerId = :UserId
        and ub.UserId = :FriendId
        and (b.BoxName like '%' + :SearchText + '%' or t2.Name like '%' + :SearchText + '%')   
        and b.IsDeleted = 0
        and b.PrivacySetting = 3
        and t.Name in (:Tags)
        group by b.BoxId
        having COUNT( distinct(b.Uid)) = :TagsCount
        union 
        select b.BoxId
        from zbox.Box b
        join zbox.UserBoxRel ub on b.BoxId = ub.BoxId
        join zbox.Friend f on ub.UserId = f.MyFriendId
        join zbox.UserBoxRel ub2 on ub2.UserId = f.OwnerId
        join zbox.BoxTag2 bt on b.BoxId = bt.BoxId 
        join zbox.Tag2 t on bt.TagId = t.TagId
        where 
        f.OwnerId = :UserId
        and ub.UserId = :FriendId
        and (b.BoxName like '%' + :SearchText + '%' or t.Name like '%' + :SearchText + '%')   
        and b.PrivacySetting !=0
        and ub.UserType in (2,3)
        and b.IsDeleted = 0
        and ub.BoxId = ub2.BoxId
        and t.Name in (:Tags)
        group by b.BoxId
        having COUNT( distinct(b.Uid)) = :TagsCount)
      group by t.Name
	    order by tagCount desc
    ]]>
  </sql-query>-->
</hibernate-mapping>