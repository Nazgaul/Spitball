//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Notice: Use of the service proxies that accompany this notice is subject to
//            the terms and conditions of the license agreement located at
//            http://go.microsoft.com/fwlink/?LinkID=202740
//            If you do not agree to these terms you may not use this content.
namespace MelissaData {
    using System;
    using System.Collections.Generic;
    using System.Data.Services.Client;
    using System.Net;
    using System.IO;
    
    
    public partial class IPCheckEntity {
        
        private Int16 _Confidence;
        
        private String _Results;
        
        private String _Domain;
        
        private Double _Latitude;
        
        private Double _Longitude;
        
        private String _ZipCode;
        
        private String _Region;
        
        private String _ISP;
        
        private String _City;
        
        private String _Country;
        
        private String _CountryAbbreviation;
        
        public Int16 Confidence {
            get {
                return this._Confidence;
            }
            set {
                this._Confidence = value;
            }
        }
        
        public String Results {
            get {
                return this._Results;
            }
            set {
                this._Results = value;
            }
        }
        
        public String Domain {
            get {
                return this._Domain;
            }
            set {
                this._Domain = value;
            }
        }
        
        public Double Latitude {
            get {
                return this._Latitude;
            }
            set {
                this._Latitude = value;
            }
        }
        
        public Double Longitude {
            get {
                return this._Longitude;
            }
            set {
                this._Longitude = value;
            }
        }
        
        public String ZipCode {
            get {
                return this._ZipCode;
            }
            set {
                this._ZipCode = value;
            }
        }
        
        public String Region {
            get {
                return this._Region;
            }
            set {
                this._Region = value;
            }
        }
        
        public String ISP {
            get {
                return this._ISP;
            }
            set {
                this._ISP = value;
            }
        }
        
        public String City {
            get {
                return this._City;
            }
            set {
                this._City = value;
            }
        }
        
        public String Country {
            get {
                return this._Country;
            }
            set {
                this._Country = value;
            }
        }
        
        public String CountryAbbreviation {
            get {
                return this._CountryAbbreviation;
            }
            set {
                this._CountryAbbreviation = value;
            }
        }
    }
    
    public partial class IPCheckContainer : System.Data.Services.Client.DataServiceContext {
        
        public IPCheckContainer(Uri serviceRoot) : 
                base(serviceRoot) {
        }
        
        /// <summary>
        /// </summary>
        /// <param name="IPAddress">IP Address to be verified Sample Values : 216.231.3.166</param>
        /// <param name="MaximumSuggestions">Maximum suggestions to return Sample Values : 5</param>
        /// <param name="MinimumConfidence">Minimum confidence of results to return. The value should be between 0 and 1. Sample Values : 0.7</param>
        public DataServiceQuery<IPCheckEntity> SuggestIPAddresses(String IPAddress, Int32 MaximumSuggestions, Double MinimumConfidence) {
            if ((IPAddress == null)) {
                throw new System.ArgumentNullException("IPAddress", "IPAddress value cannot be null");
            }
            DataServiceQuery<IPCheckEntity> query;
            query = base.CreateQuery<IPCheckEntity>("SuggestIPAddresses").AddQueryOption("MaximumSuggestions", MaximumSuggestions).AddQueryOption("MinimumConfidence", MinimumConfidence);
            if ((IPAddress != null)) {
                query = query.AddQueryOption("IPAddress", string.Concat("\'", System.Uri.EscapeDataString(IPAddress), "\'"));
            }
            return query;
        }
    }
}
