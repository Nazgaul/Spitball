

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="google-signin-client_id" content="341737442078-ajaf5f42pajkosgu9p3i1bcvgibvicbq.apps.googleusercontent.com">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script src="https://apis.google.com/js/platform.js?onload=start" async defer></script>
    <title>title</title>
</head>
<body>
    <div id="my-signin2">CLICK HERE</div>

<script>
    function renderButton() {
        gapi.signin2.render('my-signin2', {
            'scope': 'profile https://www.googleapis.com/auth/calendar.readonly',
            'access_type':'offline',
            'width': 240,
            'height': 50,
            'longtitle': true,
            'theme': 'dark',
            'onsuccess': onSignIn,
            
        });
    }

    function start() {
        gapi.load('auth2', function() {
            auth2 = gapi.auth2.init({
                client_id: '341737442078-ajaf5f42pajkosgu9p3i1bcvgibvicbq.apps.googleusercontent.com',
                // Scopes to request in addition to 'profile' and 'email'
                'scope': 'profile https://www.googleapis.com/auth/calendar.readonly'
            });
        });
    }
    $('#my-signin2').click(function() {
        // signInCallback defined in step 6.
        auth2.grantOfflineAccess().then(signInCallback);
    });
    function signInCallback(authResult) {
        debugger;
        if (authResult['code']) {

            // Hide the sign-in button now that the user is authorized, for example:
            //$('#signinButton').attr('style', 'display: none');

            //// Send the code to the server
            $.ajax({
                type: 'POST',
                url: '/api/tutor/calendar/Access',
                // Always include an `X-Requested-With` header in every AJAX request,
                // to protect against CSRF attacks.
                contentType: 'application/json',
                success: function (result) {
                    // Handle or verify the server response.
                },
                processData: false,
                data: JSON.stringify( {
                    code: authResult['code']
                })
            }).then((r) => {
                console.log(r);
            });
        } else {
            // There was an error.
        }
    }

    function onSignIn(googleUser) {
        debugger;
        var id_token = googleUser.getAuthResponse().id_token;
        var xhr = new XMLHttpRequest();
        xhr.open('POST', 'account/logInGoogle');
        xhr.setRequestHeader('Content-Type', 'application/json');
        //xhr.onload = function() {
        //    if (xhr.status === 200) {
        //        location.href = "/";

        //    }
        //};
        //xhr.send(JSON.stringify({
        //    token: id_token
        //}));
    }
</script>
</body>
</html>


