
@using Cloudents.Web.Middleware
@using Cloudents.Web.Services
@using Cloudents.Web.Views
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Configuration
@inject Microsoft.ApplicationInsights.AspNetCore.JavaScriptSnippet JavaScriptSnippet
@inject IWebHostEnvironment Environment
@inject WebPackChunkName Provider
@inject IConfiguration Configuration
@inject ConfigurationService VersionService

@{
    //var p = Provider.GetVendorTag();
    var cdnEndPoint = Constants.GetCdnEndpoint(Configuration);
    var isAuth = User.Identity.IsAuthenticated;
    var result = System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft ? "rtl" : "ltr";
}
<!DOCTYPE html>


<html dir="@result" lang="@System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName">
<head>
    <meta charset="utf-8">
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
    <base href="~/" />
    @if (!string.Equals(@System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName, "he", StringComparison.OrdinalIgnoreCase))
    {
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:400,600,700&display=swap">
    }

    @*<link rel="stylesheet" href="@cdnEndPoint/dist/@p.GetCss()"
          asp-fallback-href="~/dist/@p.GetCss()"
          asp-fallback-test-class="cdn-only" asp-fallback-test-property="position" asp-append-version="true"
          asp-fallback-test-value="absolute" 
          />*@

    @await RenderSectionAsync("styleSection", required: false)
    

    @try
    {
        @await Html.PartialAsync($"_{VersionService.GetSiteName().ToString("G")}HeadTags",cdnEndPoint);

    }
    catch (InvalidOperationException ex)
    {
        @await Html.PartialAsync("_SpitballTags");
    }

    @Html.Raw(JavaScriptSnippet.FullScript)
    @Html.Raw(ClickJackingTagHelper.FullScript)

    @if (ViewBag.jsonLd != null)
    {
        <script type="application/ld+json">
            @Html.Raw(ViewBag.jsonLd.ToHtmlEscapedString())
        </script>
    }
</head>
<body lang="@System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName">
    <div>
        @RenderBody()
    </div>
    <div class="cdn-only"></div>

    @*<environment include="Development">
        <script src="~/dist/@p.Js" asp-append-version="true"></script>
    </environment>

    <environment exclude="Development">
        <script src="@cdnEndPoint/dist/@p.Js" crossorigin="anonymous"
                asp-fallback-src="~/dist/@p.Js"
                asp-fallback-test="window.vendor">
        </script>
    </environment>*@



    <script>
        window.version = '@VersionService.GetVersion()';


        window.publicPath = '@cdnEndPoint' + '/dist/';// + '@result/';
        window.isAuth = @isAuth.ToString().ToLower();
        window.siteName = '@VersionService.GetSiteName().ToString("G").ToLowerInvariant()';


    </script>
    @await Component.InvokeAsync("Country")
    @await RenderSectionAsync("scripts", required: false)

    @try
    {
        @await Html.PartialAsync($"_{VersionService.GetSiteName().ToString("G")}Scripts");

    }
    catch (InvalidOperationException ex)
    {
        @await Html.PartialAsync("_SpitballTags");
    }


</body>
</html>
