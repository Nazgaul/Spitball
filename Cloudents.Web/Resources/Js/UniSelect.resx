<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="changing_school_question" xml:space="preserve">
    <value>Changing Schools?</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="from" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="got_it" xml:space="preserve">
    <value>Got It!</value>
  </data>
  <data name="keep_school" xml:space="preserve">
    <value>Keep Current School</value>
  </data>
  <data name="keep_typing" xml:space="preserve">
    <value>Keep typing we are searching for you</value>
  </data>
  <data name="next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="no_worries" xml:space="preserve">
    <value>:)  No Worries</value>
  </data>
  <data name="pop_later" xml:space="preserve">
    <value>I’ll do it Later</value>
  </data>
  <data name="pop_setting_up_explain" xml:space="preserve">
    <value>By setting this up you will get the best questions &amp; study info fit for your shool &amp; classes</value>
  </data>
  <data name="pop_set_school" xml:space="preserve">
    <value>Set your school &amp; classes</value>
  </data>
  <data name="school_desc" xml:space="preserve">
    <value>
and all of the selected classes will be deleted</value>
    <comment>pay attention to the line breaks ("ENTER button"  before the first line)</comment>
  </data>
  <data name="select_class" xml:space="preserve">
    <value>Select Class</value>
  </data>
  <data name="select_school" xml:space="preserve">
    <value>Select School</value>
  </data>
  <data name="select_school_any_time" xml:space="preserve">
    <value>You can select school &amp; classes at any time from your user menu.</value>
  </data>
  <data name="select_school_now" xml:space="preserve">
    <value>Select now</value>
  </data>
  <data name="select_school_placeholder" xml:space="preserve">
    <value>Select Your School</value>
  </data>
  <data name="set_school_class" xml:space="preserve">
    <value>Set your school &amp; classes</value>
  </data>
  <data name="set_school_class_explain" xml:space="preserve">
    <value>By setting this up you will get the best questions &amp; study info fit for your shool &amp; classes</value>
  </data>
  <data name="show_all_schools" xml:space="preserve">
    <value>Show all Schools</value>
  </data>
  <data name="skip_for_now" xml:space="preserve">
    <value>Skip for now</value>
  </data>
  <data name="type_class_name_placeholder" xml:space="preserve">
    <value>Type your Class name</value>
  </data>
  <data name="type_school_name_placeholder" xml:space="preserve">
    <value>Type your school name</value>
  </data>
  <data name="yes_change" xml:space="preserve">
    <value>YES, Change School</value>
  </data>
  <data name="add_class" xml:space="preserve">
    <value>Add This Class</value>
  </data>
  <data name="add_new_class" xml:space="preserve">
    <value>Add New Class</value>
  </data>
  <data name="add_new_university" xml:space="preserve">
    <value>Add New University</value>
  </data>
  <data name="add_university" xml:space="preserve">
    <value>Add This University</value>
  </data>
  <data name="class_length_error" xml:space="preserve">
    <value>Must be more then 3 characters</value>
  </data>
  <data name="didnt_find_class" xml:space="preserve">
    <value>Didn't find class? Add it here!</value>
  </data>
  <data name="didnt_find_university" xml:space="preserve">
    <value>Didn't find university? Add it here!</value>
  </data>
  <data name="university_length_error" xml:space="preserve">
    <value>Must be more then 10 characters</value>
  </data>
</root>