<?xml version="1.0" encoding="utf-8" ?>

<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Zbang.Zbox.Domain"
                   namespace="Zbang.Zbox.Domain">
  <class name="User" table="Users">
    <id name="Id" column="UserId" type="long">
      <generator class="native"></generator>
    </id>
    <property column="UserType" name="UserType" not-null="false" type="Zbang.Zbox.Infrastructure.Enums.UserType, Zbang.Zbox.Infrastructure" />


    <property name="Email" column="Email" not-null="true" unique="true"/>
    <property name="IsRegisterUser" column="IsEmailVerified" not-null="true"/>

    <property name="Name" column="UserName" not-null="false"/>

    <property name="FirstName" not-null="false"/>
    <property name="LastName" not-null="false"/>
    <property name="Sex" not-null="false"/>
    <property name="Url" not-null="false"/>
    <property name="Culture" column="Culture" not-null="false"/>

    <component name="UserTime" class="UserTimeDetails">
      <property name="CreationTime" not-null="true" insert="true" update="false" />
      <property name="UpdateTime"  not-null="true" insert="true"  />
      <property name="CreatedUser"  not-null="true" insert="true" update="false"/>
      <property name="UpdatedUser"  not-null="true" insert="true" />
    </component>

    <property name="MembershipId" column="MembershipUserId"  not-null="false"/>
    <property name="FacebookId" column="FacebookUserId" not-null="false"/>
    <property name="GoogleId" column="GoogleUserId" not-null="false"/>
    <property name="ImageLarge" column="UserImageLarge" not-null="false"/>
    <property name="StudentId" column="UserCode"/>
    <property name="Reputation" column="UserReputation"/>

   

    <component name="Quota" class="Quota">
      <property name="AllocatedSize"/>
      <property name="UsedSpace"/>
    </component>
    <many-to-one column="UniversityId" class="University" name="University" foreign-key="UniversityUser2"/>
    <many-to-one column="Department" class="RussianDepartment" name="RussianDepartment" foreign-key="DeparetmentUser" not-null="false"/>
    <property name="GroupNumber"/>
    <property name="RegisterNumber"/>
    <property name="MobileDevice" />
    <property name="PushNotificationSetting" />
    <property name="Theme" />
    <property name="EmailSendSettings" />
    <property name="Online" />
    <set name="UserBoxRel" cascade="all-delete-orphan" inverse="true" lazy="true">
      <key column="UserId"/>
      <one-to-many class="UserBoxRel"/>
    </set>
    <property name="LastAccessTime" type="DateTime2"  />
    <bag name="Connections"  cascade="all-delete-orphan" inverse="true" lazy="true">
      <key column="UserId"/>
      <one-to-many class="Connection"/>
    </bag>
  </class>

  <class name="Connection" table="SignalRConnection">
    <id name="Id">
      <generator class="assigned"></generator>
    </id>
    <many-to-one column="UserId" class="User" name="User" foreign-key="SignalRConnectionUser" />
    <property name="LastActivity" />
  </class>

  <class name="University" table="University">
    <id name="Id" type="long">
      <generator class="assigned"></generator>
    </id>
    <property name="OrgName" not-null="false"/>
    <property name="Url" not-null="false"/>
    <property name="LargeImage"  not-null="false"/>
    <property name="UniversityName"/>

    <component name="UserTime" class="UserTimeDetails">
      <property name="CreationTime" not-null="true" insert="true" update="false" />
      <property name="UpdateTime"  not-null="true" insert="true"  />
      <property name="CreatedUser"  not-null="true" insert="true" update="false"/>
      <property name="UpdatedUser"  not-null="true" insert="true" />
    </component>

    <!--<property name="NeedCode" />-->

    <property name="WebSiteUrl" />
    <property name="MailAddress" />
    <property name="FacebookUrl" />
    <property name="TwitterUrl" />
    <property name="TwitterWidgetId" />
    <property name="YouTubeUrl" />
    <property name="LetterUrl" />
    <property name="AdvertisementUrl" />
    <property name="Country" length="2" type="string" column="Country" not-null="false"/>
    <property name="NoOfBoxes"  />
    <property name="NoOfItems" not-null="false"/>
    <property name="NoOfQuizzes" not-null="false"/>
    <property name="NoOfUsers" not-null="false"/>

    <property name="FacebookUniId" />
    <property name="TextPopupUpper" not-null="false" length="8000"/>
    <property name="TextPopupLower" not-null="false" length="8000"/>

    <property name="IsDeleted" />
    <property name="IsDirty" />
    <property name="Extra" />


    <property name="AdminScore" />
    <property name="AdminNoOfPeople" />
    <many-to-one column="UniversityData" class="University" name="UniversityData" foreign-key="UniversityUniversityData"/>

    <bag name="Libraries"  cascade="all-delete-orphan" inverse="true" lazy="true" >
      <key column="Id" foreign-key="LibraryUniversity2"/>
      <one-to-many class="Library"/>
    </bag>
  </class>

  <query name="UpdateUserReputation">
    <![CDATA[
    update User c set c.Reputation = :reputation where c.Id = :userid
    ]]>
  </query>
  <query name="UpdateUserMobileDevice">
    <![CDATA[
    update User c set c.MobileDevice = :mobileDevice, c.PushNotificationSetting = 1 where c.Id = :userid
    ]]>
  </query>
  <query name="UpdateUserUnsubscribe">
    <![CDATA[
    update User c set c.EmailSendSettings = :emailSettings, c.UserTime.UpdateTime = :dateTime where c.Email in (:userEmail) and c.EmailSendSettings = 0
    ]]>
  </query>
  <query name="UniversityData">
    <![CDATA[
       select u.id from University u 
       where u.UserTime.UpdateTime > :dateTime and u.IsDeleted = 0
       or u.id in (
       select University.id from AcademicBox b where b.UserTime.UpdateTime > :dateTime
       )
    ]]>
  </query>
</hibernate-mapping>