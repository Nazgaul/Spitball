need to update DocumentSearchWrite
need to update QuestionSearchWrite


alter table sb.university
add ImageUrl nvarchar(255)

alter table sb.university
add UsersCount int

update sb.University 
set userscount = (select count(*) from sb.[user] where UniversityId2 = sb.University.id)

Need to update azure search
Need to upload azure function
Delete version txt from blob


--Document Search example
select d.*
from sb.[user] u
join sb.UsersCourses uc
	on u.Id = uc.UserId
join sb.Document d
	on uc.CourseId = d.CourseName
join sb.University un
	on un.Id = d.UniversityId
where u.Id = @UserId and uc.CourseId = @CourseName
order by case when d.UniversityId = u.UniversityId2 then 1 else 0 end desc
			,case when un.Country = u.Country then 1 else 0 end desc


--University Image DBI
begin tran
update u
set ImageUrl = (select LargeImage from zbox.University uz where uz.UniversityName = u.Name and u.Country = uz.Country)
from sb.University u
commit





--Create DocumentSearch index view

CREATE VIEW sb.iv_DocumentSearch
WITH SCHEMABINDING  
AS  
    select 
d.Id
,un.Name as University
,d.CourseName as Course
,d.MetaContent as Snippet
,d.Professor
,d.Type
,d.Name as Title
,u.Id as User_Id
,U.Name as User_Name
,u.Score as User_Score
,u.Image as User_Image
,d.[Views]
,d.Downloads
,d.UpdateTime as [DateTime]
,d.VoteCount as Vote_Votes
,d.Price as Price

,un.Id as UniversityId
,un.Country as Country

from sb.Document d 
join sb.[user] u on d.UserId = u.Id
join sb.University un on un.Id = d.UniversityId; 
where d.State = 'Ok'
GO  
CREATE UNIQUE CLUSTERED INDEX IDX_V1   
    ON sb.iv_DocumentSearch (Id); 
GO  


CREATE VIEW sb.iv_QuestionSearch
WITH SCHEMABINDING  
AS  
    select 
q.Id as Id,
  isnull(q.Subject_id,0) as [Subject],
  q.Price as Price,
   q.Text as [Text],
    q.Attachments as Files,
	 q.CourseId as Course,
--(SELECT count(*) as answers FROM sb.[Answer] a WHERE a.QuestionId = q.Id and a.State = 'Ok') as Answers, 
q.Updated as [DateTime],
case when not (q.CorrectAnswer_id is null) then 1 else 0 end as HasCorrectAnswer,
q.Language as CultureInfo,
u.Id as User_Id,
u.Name as User_Name,
u.Score as User_Score,
u.Image as User_Image,
q.VoteCount as Vote_Votes
,q.UniversityId
from sb.Question q
join sb.[user] u
	on u.id = q.UserId
--left join sb.University un on un.Id = q.UniversityId
where q.State = 'Ok'; 
GO  
CREATE UNIQUE CLUSTERED INDEX IDX_V1   
    ON sb.iv_QuestionSearch (Id); 
GO  