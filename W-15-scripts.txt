--need to add connection string to service bus , in azure function


--add queue name sms production
az servicebus queue create --name sms --namespace-name spitball-dev --resource-group zbox-dev --default-message-time-to-live PT30M
az servicebus queue create --name signalr --namespace-name spitball-dev --resource-group zbox-dev --default-message-time-to-live PT30M
az servicebus topic create --name background2 --namespace-name spitball-dev --resource-group zbox-dev --default-message-time-to-live P14D --max-size  5120
az servicebus topic subscription create --name default --namespace-name spitball-dev --resource-group zbox-dev --topic-name background2

--Update document university
BEGIN tran
update D
set UniversityId = t.University
from sb.Document D
join (select U2.Id, d.Id
		from sb.Document d 
		join zbox.Item i 
			on d.OldId = i.ItemId
		join zbox.Box b 
			on i.BoxId = b.BoxId
		join Zbox.University u
			on b.University = u.Id
		join sb.University u2
			on u.UniversityName = u2.Name and u.Country = u2.Country) t (University, tId) on t.tId = D.Id
commit


alter table sb.document
add  Downloads int  null;

UPDATE sb.Document
SET Name = REPLACE(Name, '+', '');
UPDATE sb.Course
SET Name = REPLACE(Name, '+', '');
UPDATE sb.University
SET Name = REPLACE(Name, '+', '');

ALTER TABLE sb.document ALTER COLUMN BlobName nvarchar(255) null;
--remove + char from course name
begin tran
insert into sb.Course select REPLACE(Name, '+', '-'),0 from sb.Course where [Name] like '%+%' order by 1

update sb.Document
set CourseName = REPLACE(CourseName, '+', '-')
where CourseName like '%+%'

delete from sb.Course where name like '%+%'
commit

--make sure state in question table is not null
update sb.Question
set state = 'Ok'
where state is null

update sb.Question
set state = 'Deleted' 
where state = 'Suspended'

ALTER TABLE sb.question ALTER COLUMN State nvarchar(255) not null;

alter table sb.answer
add  State nvarchar(255) null
update sb.Answer
set state = 'Ok'
ALTER TABLE sb.Answer ALTER COLUMN State nvarchar(255) not null;


begin tran
update sb.[Transaction]

alter table sb.[user]
add  Score int null
set [Type] = 'Earned'
where [Type] = 'Awarded'
commit

alter table sb.[user]
add Score int null


begin tran
update U
set Score =  U.Balance + (isnull(t.price, 0) * -1)
from sb.[user] U 
left join (select [User_Id], sum(price) as price from sb.[Transaction] where [Action] = 'CashOut' group by [User_Id]) as t
	on U.Id = t.[User_id] 
commit



update sb.[user]
set fictive = 0s
where fictive is null

alter table sb.[user]
 ALTER COLUMN fictive bit not null;




--Case 11739

begin tran
update D
set [Views] = NumberOfViews
from sb.Document D
join (select ItemId, NumberOfViews from zbox.Item) I
on D.OldId = I.ItemId
commit


begin tran
update D
set Downloads = NumberOfDownloads
from sb.Document D
join (select ItemId, NumberOfDownloads from zbox.Item) I
on D.OldId = I.ItemId
commit


--Case 11716
begin tran
update sb.[user]
set SecurityStamp = ''
where SecurityStamp is null and OldUser = 1
commit


--set items state to be not null
begin tran
update sb.Document
set [state] = 'Ok'
where [state] is null
alter table sb.Document alter column [state] nvarchar(255) not null;
commit

begin tran
update sb.Answer
set [state] = 'Ok'
where [state] is null
alter table sb.Answer alter column [state] nvarchar(255) not null;
commit

begin tran
update sb.Question
set [state] = 'Ok'
where [state] is null
alter table sb.Question alter column [state] nvarchar(255) not null;
commit

/****** Object:  Table [sb].[Vote]    Script Date: 11/12/2018 17:01:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [sb].[Vote](
	[Id] [uniqueidentifier] NOT NULL,
	[VoteType] [int] NOT NULL,
	[UserId] [bigint] NOT NULL,
	[DocumentId] [bigint] NULL,
	[AnswerId] [uniqueidentifier] NULL,
	[QuestionId] [bigint] NULL,
	[CreationTime] [datetime2](7) NULL,
	[UpdateTime] [datetime2](7) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

--ALTER TABLE [sb].[Vote]  WITH CHECK ADD  CONSTRAINT [FK544BAFF294A65100] FOREIGN KEY([ItemComponent_id])
--REFERENCES [sb].[Answer] ([Id])
--GO

--ALTER TABLE [sb].[Vote] CHECK CONSTRAINT [FK544BAFF294A65100]
--GO

ALTER TABLE [sb].[Vote]  WITH CHECK ADD  CONSTRAINT [Votes_Answer] FOREIGN KEY([AnswerId])
REFERENCES [sb].[Answer] ([Id])
GO

ALTER TABLE [sb].[Vote] CHECK CONSTRAINT [Votes_Answer]
GO

ALTER TABLE [sb].[Vote]  WITH CHECK ADD  CONSTRAINT [Votes_Document] FOREIGN KEY([DocumentId])
REFERENCES [sb].[Document] ([Id])
GO

ALTER TABLE [sb].[Vote] CHECK CONSTRAINT [Votes_Document]
GO

ALTER TABLE [sb].[Vote]  WITH CHECK ADD  CONSTRAINT [Votes_Question] FOREIGN KEY([QuestionId])
REFERENCES [sb].[Question] ([Id])
GO

ALTER TABLE [sb].[Vote] CHECK CONSTRAINT [Votes_Question]
GO

ALTER TABLE [sb].[Vote] ADD UNIQUE NONCLUSTERED (
	[UserId] ASC,
	[QuestionId] ASC)
    ALTER TABLE [sb].[Vote] ADD UNIQUE NONCLUSTERED (
	[UserId] ASC,
	[AnswerId] ASC)
    ALTER TABLE [sb].[Vote] ADD UNIQUE NONCLUSTERED (
	[UserId] ASC,
	[DocumentId] ASC)


