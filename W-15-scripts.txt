-- need to update  iv_DocumentSearch



populate ReadTutor
insert into sb.ReadTutor (Id, Name, Image, Subjects, AllSubjects, Courses, AllCourses, Price, Rate, RateCount, Bio, University, Lessons, Rating)

Select
t.id as Id,
u.name as Name,
u.image as Image,
	(select cs.Name as 'name' 
	from sb.CourseSubject cs where cs.Id 
	in (
	select top 3 c.SubjectId from sb.Course c where c.SubjectId <> 39 
	and c.Name in (
	select uc.CourseId as Courses from sb.UsersCourses uc where uc.CanTeach = 1 and uc.UserId = t.id )
	) order by cs.Name for json PATH) as Subjects,

	(select cs.Name as 'name' 
	from sb.CourseSubject cs where cs.Id 
	in (
	select c.SubjectId from sb.Course c where c.SubjectId <> 39 
	and c.Name in (
	select uc.CourseId as Courses from sb.UsersCourses uc where uc.CanTeach = 1 and uc.UserId = t.id )
	) order by cs.Name for json PATH) as AllSubjects,

(Select top 3 uc.courseid as 'name' 
   from sb.UsersCourses uc where uc.CanTeach = 1 and uc.UserId = t.id order by uc.courseid for json PATH) as Courses,
(Select uc.courseid as 'name' 
   from sb.UsersCourses uc where uc.CanTeach = 1 and uc.UserId = t.id order by uc.courseid for json PATH) as AllCourses,
t.Price,
reviews.Rate ,
reviews.sumCount as RateCount,
t.bio as Bio,
u2.Name as University,
iif(sr.lessonsCount < reviews.sumCount, reviews.sumCount, sr.lessonsCount) as Lessons,
((isnull(reviews.Rate, 0) * reviews.sumCount) + ((select AVG(Rate) from sb.TutorReview) * 12) + 
(case when sr.lessonsCount < reviews.sumCount then reviews.sumCount else sr.lessonsCount end * isnull(reviews.Rate, 0))) / 
(reviews.sumCount + 12 + case when sr.lessonsCount < reviews.sumCount then reviews.sumCount else sr.lessonsCount end)as Rating
from sb.tutor t
join sb.[user] u on t.id = u.id
left join sb.University u2 on u.UniversityId2 = u2.Id
cross apply (
select Avg(tr.Rate) as Rate,count(*) as sumCount from sb.TutorReview tr where tr.TutorId = t.id 
) as reviews
cross apply (
select count(*) as lessonsCount from sb.StudyRoomSession srs 
join sb.StudyRoom sr on srs.StudyRoomId  = sr.id  and srs.Duration > 6000000000 and sr.TutorId = t.id
) as sr 
where t.State = 'Ok'






--Populate DurationInMinutes
update srs
set srs.DurationInMinutes = srs.Duration / 600000000
from sb.StudyRoomSession srs