<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Academic" xml:space="preserve">
    <value>学术</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>增加</value>
  </data>
  <data name="AddLink" xml:space="preserve">
    <value>添加网站链接</value>
  </data>
  <data name="AddPrivateBox" xml:space="preserve">
    <value>添加一个私密主题框</value>
  </data>
  <data name="AddSchool" xml:space="preserve">
    <value>添加一个学校</value>
  </data>
  <data name="AddUrl" xml:space="preserve">
    <value>增加链接，例如 www.website.com</value>
  </data>
  <data name="ApplicationSent" xml:space="preserve">
    <value>谢谢！你的申请已发送。</value>
  </data>
  <data name="BoxName" xml:space="preserve">
    <value>主题框名称</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ChangePrivacy" xml:space="preserve">
    <value>修改隐私：</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>选择文件</value>
  </data>
  <data name="ChooseFiles" xml:space="preserve">
    <value>选择文件</value>
  </data>
  <data name="ChooseNotification" xml:space="preserve">
    <value>选择通知：</value>
  </data>
  <data name="CommentHere" xml:space="preserve">
    <value>请在这里写下你的评论…</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="CreateBox" xml:space="preserve">
    <value>创建新的主题框</value>
  </data>
  <data name="CreateCourse" xml:space="preserve">
    <value>创建新的课程</value>
  </data>
  <data name="CreateItem" xml:space="preserve">
    <value>创建新的院系</value>
  </data>
  <data name="CreateTab" xml:space="preserve">
    <value>创建标签</value>
  </data>
  <data name="DragAndDrop" xml:space="preserve">
    <value>把你的文件拖放到这里</value>
  </data>
  <data name="DropToUpload" xml:space="preserve">
    <value>拖曳文件以上传</value>
  </data>
  <data name="EgMusic" xml:space="preserve">
    <value>例如，音乐</value>
  </data>
  <data name="GetBackToYou" xml:space="preserve">
    <value>我们会完成审阅并在 24 小时内答复你。
同时，你可以到你所在地区，创建私密主题框，并邀请你的朋友。</value>
  </data>
  <data name="Here" xml:space="preserve">
    <value>这里</value>
  </data>
  <data name="InviteFriends" xml:space="preserve">
    <value>邀请你的朋友，他们肯定会欣然接受……</value>
  </data>
  <data name="InviteTo" xml:space="preserve">
    <value>邀请到</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>下一个</value>
  </data>
  <data name="Notification" xml:space="preserve">
    <value>通知</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>个人</value>
  </data>
  <data name="PrivacySettings" xml:space="preserve">
    <value>隐私设置</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>必填字段</value>
  </data>
  <data name="SelectFromList" xml:space="preserve">
    <value>- 从列表中选择</value>
  </data>
  <data name="SelectPeople" xml:space="preserve">
    <value>从地址簿中挑选联系人：</value>
  </data>
  <data name="SelectType" xml:space="preserve">
    <value>选择主题框类型：</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>发送</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>发送消息</value>
  </data>
  <data name="SendRequest" xml:space="preserve">
    <value>发送请求</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="SiteLink" xml:space="preserve">
    <value>网站链接</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>致：</value>
  </data>
  <data name="ToAddAcademic" xml:space="preserve">
    <value>添加一个学术主题框，点击</value>
  </data>
  <data name="TypeDepartment" xml:space="preserve">
    <value>- 输入系名</value>
  </data>
  <data name="TypeInstructor" xml:space="preserve">
    <value>- 输入讲师名字</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>上传</value>
  </data>
  <data name="Uploading" xml:space="preserve">
    <value>上传中</value>
  </data>
  <data name="UploadTo" xml:space="preserve">
    <value>上传文件至</value>
  </data>
  <data name="UsernameOr" xml:space="preserve">
    <value>用户名或 Email</value>
  </data>
  <data name="ViaEmail" xml:space="preserve">
    <value>通过 Email 邀请</value>
  </data>
  <data name="ViaFacebook" xml:space="preserve">
    <value>通过 Facebook 邀请</value>
  </data>
  <data name="UploadedFiles" xml:space="preserve">
    <value>已上传文件</value>
  </data>
  <data name="UploadFiles" xml:space="preserve">
    <value>上传文件</value>
  </data>
  <data name="UploadingFiles" xml:space="preserve">
    <value>文件上传中</value>
  </data>
</root>