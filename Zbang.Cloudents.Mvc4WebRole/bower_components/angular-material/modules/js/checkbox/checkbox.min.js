/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
(function(n,t){"use strict";function i(n,i,r,u,f,e){function s(s,h){h.type="checkbox";h.tabindex=h.tabindex||"0";s.attr("role",h.type);s.on("click",function(n){this.hasAttribute("disabled")&&n.stopImmediatePropagation()});return function(s,h,c,l){function v(n,t,i){c[n]&&s.$watch(c[n],function(n){i[n]&&h.attr(t,i[n])})}function y(n){var t=n.which||n.keyCode;(t===r.KEY_CODE.SPACE||t===r.KEY_CODE.ENTER)&&(n.preventDefault(),h.hasClass("md-focused")||h.addClass("md-focused"),a(n))}function a(n){h[0].hasAttribute("disabled")||s.$apply(function(){var t=c.ngChecked?c.checked:!l.$viewValue;l.$setViewValue(t,n&&n.type);l.$render()})}function p(){l.$viewValue?h.addClass(o):h.removeClass(o)}l=l||f.fakeNgModel();u(h);c.ngChecked&&s.$watch(s.$eval.bind(s,c.ngChecked),l.$setViewValue.bind(l));v("ngDisabled","tabindex",{"true":"-1","false":c.tabindex});i.expectWithText(h,"aria-label");n.link.pre(s,{on:t.noop,0:{}},c,[l]);s.mouseActive=!1;h.on("click",a).on("keypress",y).on("mousedown",function(){s.mouseActive=!0;e(function(){s.mouseActive=!1},100)}).on("focus",function(){s.mouseActive===!1&&h.addClass("md-focused")}).on("blur",function(){h.removeClass("md-focused")});l.$render=p}}n=n[0];var o="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"><\/div><\/div><div ng-transclude class="md-label"><\/div>',compile:s}}t.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",i);i.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"]})(window,window.angular);