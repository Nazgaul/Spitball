/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
(function(n,t){"use strict";function i(n,i,r,u,f,e){function s(n,s){var h=o.compile(n,s);return n.addClass("md-dragging"),function(n,o,s,c){function p(t){a&&a(n)||(t.stopPropagation(),o.addClass("md-dragging"),l={width:v.prop("offsetWidth")},o.removeClass("transition"))}function w(n){if(l){n.stopPropagation();n.srcEvent&&n.srcEvent.preventDefault();var i=n.pointer.distanceX/l.width,t=c.$viewValue?1+i:i;t=Math.max(0,Math.min(1,t));v.css(r.CSS.TRANSFORM,"translate3d("+100*t+"%,0,0)");l.translate=t}}function b(n){if(l){n.stopPropagation();o.removeClass("md-dragging");v.css(r.CSS.TRANSFORM,"");var t=c.$viewValue?l.translate>.5:l.translate<.5;t&&k(!c.$viewValue);l=null}}function k(t){n.$apply(function(){c.$setViewValue(t);c.$render()})}var a,v,y,l;c=c||i.fakeNgModel();a=null;s.disabled!=null?a=function(){return!0}:s.ngDisabled&&(a=u(s.ngDisabled));v=t.element(o[0].querySelector(".md-thumb-container"));y=t.element(o[0].querySelector(".md-container"));f(function(){o.removeClass("md-dragging")});h(n,o,s,c);a&&n.$watch(a,function(n){o.attr("tabindex",n?-1:0)});e.register(y,"drag");y.on("$md.dragstart",p).on("$md.drag",w).on("$md.dragend",b)}}var o=n[0];return{restrict:"E",priority:210,transclude:!0,template:'<div class="md-container"><div class="md-bar"><\/div><div class="md-thumb-container"><div class="md-thumb" md-ink-ripple md-ink-ripple-checkbox><\/div><\/div><\/div><div ng-transclude class="md-label"><\/div>',require:"?ngModel",compile:s}}t.module("material.components.switch",["material.core","material.components.checkbox"]).directive("mdSwitch",i);i.$inject=["mdCheckboxDirective","$mdUtil","$mdConstant","$parse","$$rAF","$mdGesture"]})(window,window.angular);