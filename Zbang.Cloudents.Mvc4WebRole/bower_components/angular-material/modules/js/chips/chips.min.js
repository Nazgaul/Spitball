/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
(function(n,t){"use strict";function f(n,i){function f(u){return u.append(i.processTemplate(r)),function(i,r,u,f){if(r.addClass("md-chip"),n(r),f)t.element(r[0].querySelector(".md-chip-content")).on("blur",function(){f.selectedChip=-1})}}var r=i.processTemplate(u);return{restrict:"E",require:"^?mdChips",compile:f}}function e(n){function t(t,i,r,u){i.on("click",function(){t.$apply(function(){u.removeChip(t.$$replacedScope.$index)})});n(function(){i.attr({tabindex:-1,ariaHidden:!0});i.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:t}}function o(n){function t(t,i,r){var f=t.$parent.$mdChipsCtrl,u=f.parent.$new(!1,f.parent),e;u.$$replacedScope=t;u.$chip=t.$chip;u.$index=t.$index;u.$mdChipsCtrl=f;e=f.$scope.$eval(r.mdChipTransclude);i.html(e);n(i.contents())(u)}return{restrict:"EA",terminal:!0,link:t,scope:!1}}function i(n,t,i,r,u){this.$timeout=u;this.$mdConstant=t;this.$scope=n;this.parent=n.$parent;this.$log=i;this.$element=r;this.ngModelCtrl=null;this.userInputNgModelCtrl=null;this.userInputElement=null;this.items=[];this.selectedChip=-1;this.hasAutocomplete=!1;this.deleteHint="Press delete to remove this chip.";this.deleteButtonLabel="Remove";this.chipBuffer="";this.useOnAppend=!1;this.useOnSelect=!1}function s(n,t,i,r,u){function e(e,o){function s(n){if(o.ngModel){var t=h[0].querySelector(n);return t&&t.outerHTML}}var h=o.$mdUserTemplate;o.$mdUserTemplate=null;var a=s("md-chips>*[md-chip-remove]")||f.remove,v=s("md-chips>md-chip-template")||f.default,c=s("md-chips>md-autocomplete")||s("md-chips>input")||f.input,l=h.find("md-chip");return h[0].querySelector("md-chip-template>*[md-chip-remove]")&&r.warn("invalid placement of md-chip-remove within md-chip-template."),function(r,e,s,h){var y,p;t.initOptionalProperties(r,o);n(e);y=h[0];y.chipContentsTemplate=v;y.chipRemoveTemplate=a;y.chipInputTemplate=c;e.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){y.onFocus()});o.ngModel&&(y.configureNgModel(e.controller("ngModel")),s.mdOnAppend&&y.useOnAppendExpression(),s.mdOnRemove&&y.useOnRemoveExpression(),s.mdOnSelect&&y.useOnSelectExpression(),c!=f.input&&r.$watch("$mdChipsCtrl.readonly",function(n){n||t.nextTick(function(){c.indexOf("<md-autocomplete")===0&&y.configureAutocomplete(e.find("md-autocomplete").controller("mdAutocomplete"));y.configureUserInput(e.find("input"))})}));l.length>0&&(p=i(l.clone())(r.$parent),u(function(){e.find("md-chips-wrap").prepend(p)}))}}function o(){return{chips:t.processTemplate(l),input:t.processTemplate(a),"default":t.processTemplate(v),remove:t.processTemplate(y)}}var f=o();return{template:function(n,t){return t.$mdUserTemplate=n.clone(),f.chips},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:e,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",onAppend:"&mdOnAppend",onRemove:"&mdOnRemove",onSelect:"&mdOnSelect",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}function r(){this.selectedItem=null;this.searchText=""}function c(n,t){function i(i,r){return function(i,u){t.initOptionalProperties(i,r);n(u);u.attr("tabindex","-1")}}return{template:function(){return h},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:i,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch",highlightFlags:"@?mdHighlightFlags"}}}var u,h;t.module("material.components.chips",["material.core","material.components.autocomplete"]);t.module("material.components.chips").directive("mdChip",f);u='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    <\/span>';f.$inject=["$mdTheming","$mdUtil"];t.module("material.components.chips").directive("mdChipRemove",e);e.$inject=["$timeout"];t.module("material.components.chips").directive("mdChipTransclude",o);o.$inject=["$compile"];t.module("material.components.chips").controller("MdChipsCtrl",i);i.$inject=["$scope","$mdConstant","$log","$element","$timeout"];i.prototype.inputKeydown=function(n){var t=this.getChipBuffer();switch(n.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.hasAutocomplete&&this.requireMatch||!t)break;n.preventDefault();this.appendChip(t);this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(t)break;n.preventDefault();n.stopPropagation();this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}};i.prototype.chipKeydown=function(n){if(!this.getChipBuffer())switch(n.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0)return;n.preventDefault();this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:n.preventDefault();this.selectedChip<0&&(this.selectedChip=this.items.length);this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:n.preventDefault();this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0)return;n.preventDefault();this.onFocus()}};i.prototype.getPlaceholder=function(){var n=this.items.length&&(this.secondaryPlaceholder==""||this.secondaryPlaceholder);return n?this.placeholder:this.secondaryPlaceholder};i.prototype.removeAndSelectAdjacentChip=function(n){var i=this.getAdjacentChipIndex(n);this.removeChip(n);this.$timeout(t.bind(this,function(){this.selectAndFocusChipSafe(i)}))};i.prototype.resetSelectedChip=function(){this.selectedChip=-1};i.prototype.getAdjacentChipIndex=function(n){var t=this.items.length-1;return t==0?-1:n==t?n-1:n};i.prototype.appendChip=function(n){(this.useOnAppend&&this.onAppend&&(n=this.onAppend({$chip:n})),this.items.indexOf(n)+1)||this.items.push(n)};i.prototype.useOnAppendExpression=function(){this.useOnAppend=!0};i.prototype.useOnRemoveExpression=function(){this.useOnRemove=!0};i.prototype.useOnSelectExpression=function(){this.useOnSelect=!0};i.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer};i.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""};i.prototype.removeChip=function(n){var t=this.items.splice(n,1);if(t&&t.length&&this.useOnRemove&&this.onRemove)this.onRemove({$chip:t[0],$index:n})};i.prototype.removeChipAndFocusInput=function(n){this.removeChip(n);this.onFocus()};i.prototype.selectAndFocusChipSafe=function(n){if(!this.items.length){this.selectChip(-1);this.onFocus();return}if(n===this.items.length)return this.onFocus();n=Math.max(n,0);n=Math.min(n,this.items.length-1);this.selectChip(n);this.focusChip(n)};i.prototype.selectChip=function(n){if(n>=-1&&n<=this.items.length){if(this.selectedChip=n,this.useOnSelect&&this.onSelect)this.onSelect({$chip:this.items[this.selectedChip]})}else this.$log.warn("Selected Chip index out of bounds; ignoring.")};i.prototype.selectAndFocusChip=function(n){this.selectChip(n);n!=-1&&this.focusChip(n)};i.prototype.focusChip=function(n){this.$element[0].querySelector('md-chip[index="'+n+'"] .md-chip-content').focus()};i.prototype.configureNgModel=function(n){this.ngModelCtrl=n;var t=this;n.$render=function(){t.items=t.ngModelCtrl.$viewValue}};i.prototype.onFocus=function(){var n=this.$element[0].querySelector("input");n&&n.focus();this.resetSelectedChip()};i.prototype.onInputFocus=function(){this.inputHasFocus=!0;this.resetSelectedChip()};i.prototype.onInputBlur=function(){this.inputHasFocus=!1};i.prototype.configureUserInput=function(n){var r;this.userInputElement=n;r=n.controller("ngModel");r!=this.ngModelCtrl&&(this.userInputNgModelCtrl=r);var f=this.$scope,i=this,u=function(n,r){f.$evalAsync(t.bind(i,r,n))};n.attr({tabindex:0}).on("keydown",function(n){u(n,i.inputKeydown)}).on("focus",function(n){u(n,i.onInputFocus)}).on("blur",function(n){u(n,i.onInputBlur)})};i.prototype.configureAutocomplete=function(n){if(n){this.hasAutocomplete=!0;n.registerSelectedItemWatcher(t.bind(this,function(n){n&&(this.appendChip(n),this.resetChipBuffer())}));this.$element.find("input").on("focus",t.bind(this,this.onInputFocus)).on("blur",t.bind(this,this.onInputBlur))}};i.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0};t.module("material.components.chips").directive("mdChips",s);var l='      <md-chips-wrap          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"          ng-keydown="$mdChipsCtrl.chipKeydown($event)"          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus(), \'md-readonly\': !$mdChipsCtrl.ngModelCtrl }"          class="md-chips">        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"            index="{{$index}}"            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index, \'md-readonly\': $mdChipsCtrl.readonly}">          <div class="md-chip-content"              tabindex="-1"              aria-hidden="true"              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"><\/div>          <div ng-if="!$mdChipsCtrl.readonly"               class="md-chip-remove-container"               md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"><\/div>        <\/md-chip>        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"            class="md-chip-input-container"            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"><\/div>        <\/div>      <\/md-chips-wrap>',a='        <input            tabindex="0"            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"            ng-model="$mdChipsCtrl.chipBuffer"            ng-focus="$mdChipsCtrl.onInputFocus()"            ng-blur="$mdChipsCtrl.onInputBlur()"            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',v="      <span>{{$chip}}<\/span>",y='      <button          class="md-chip-remove"          ng-if="!$mdChipsCtrl.readonly"          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"          type="button"          aria-hidden="true"          tabindex="-1">        <md-icon md-svg-icon="md-close"><\/md-icon>        <span class="md-visually-hidden">          {{$mdChipsCtrl.deleteButtonLabel}}        <\/span>      <\/button>';s.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"];t.module("material.components.chips").controller("MdContactChipsCtrl",r);r.prototype.queryContact=function(n){var i=this.contactQuery({$query:n});return this.filterSelected?i.filter(t.bind(this,this.filterSelectedContacts)):i};r.prototype.itemName=function(n){return n[this.contactName]};r.prototype.filterSelectedContacts=function(n){return this.contacts.indexOf(n)==-1};t.module("material.components.chips").directive("mdContactChips",c);h='      <md-chips class="md-contact-chips"          ng-model="$mdContactChipsCtrl.contacts"          md-require-match="$mdContactChipsCtrl.requireMatch"          md-autocomplete-snap>          <md-autocomplete              md-menu-class="md-contact-chips-suggestions"              md-selected-item="$mdContactChipsCtrl.selectedItem"              md-search-text="$mdContactChipsCtrl.searchText"              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"              md-item-text="$mdContactChipsCtrl.itemName(item)"              md-no-cache="true"              md-autoselect              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">            <div class="md-contact-suggestion">              <img                   ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                  alt="{{item[$mdContactChipsCtrl.contactName]}}"                  ng-if="item[$mdContactChipsCtrl.contactImage]" />              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText"                    md-highlight-flags="{{$mdContactChipsCtrl.highlightFlags}}">                {{item[$mdContactChipsCtrl.contactName]}}              <\/span>              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}<\/span>            <\/div>          <\/md-autocomplete>          <md-chip-template>            <div class="md-contact-avatar">              <img                   ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}"                  ng-if="$chip[$mdContactChipsCtrl.contactImage]" />            <\/div>            <div class="md-contact-name">              {{$chip[$mdContactChipsCtrl.contactName]}}            <\/div>          <\/md-chip-template>      <\/md-chips>';c.$inject=["$mdTheming","$mdUtil"]})(window,window.angular);