/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
(function(n,t,i){"use strict";function r(n,i,r,u,f,o,s){this.$element=i;this.$attrs=r;this.$mdConstant=u;this.$mdUtil=o;this.$document=f;this.$scope=n;this.$timeout=s;var h=this;t.forEach(e,function(n){h[n]=t.bind(h,h[n])})}function f(n,i){return{restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function(r,u){return u.ariaRole||r[0].setAttribute("role","menubar"),t.forEach(r[0].children,function(i){if(i.nodeName=="MD-MENU"){i.hasAttribute("md-position-mode")||i.setAttribute("md-position-mode","left bottom");i.setAttribute("role","menu");var r=n.nodesToArray(i.querySelectorAll("md-menu-content"));t.forEach(r,function(n){n.classList.add("md-menu-bar-menu");n.classList.add("md-dense");n.hasAttribute("width")||n.setAttribute("width",5)})}}),function(n,t,r,u){i(n,t);u.init()}}}}function o(){return{restrict:"E",compile:function(n,t){t.role||n[0].setAttribute("role","separator")}}}function u(n,t,i){this.$element=t;this.$attrs=i;this.$scope=n}function s(){return{require:["mdMenuItem","?ngModel"],compile:function(n,i){function u(t,i){n[0].hasAttribute(t)||n[0].setAttribute(t,i)}function e(t){if(n[0].hasAttribute(t)){var i=n[0].getAttribute(t);r[0].setAttribute(t,i);n[0].removeAttribute(t)}}if(i.type=="checkbox"||i.type=="radio"){var f=n[0].textContent,r=t.element('<md-button type="button"><\/md-button>');r.html(f);r.attr("tabindex","0");n.html("");n.append(t.element('<md-icon md-svg-icon="check"><\/md-icon>'));n.append(r);n[0].classList.add("md-indent");u("role",i.type=="checkbox"?"menuitemcheckbox":"menuitemradio");t.forEach(["ng-disabled"],e)}else u("role","menuitem");return function(n,t,i,r){var u=r[0],f=r[1];u.init(f)}},controller:"MenuItemController"}}t.module("material.components.menuBar",["material.core","material.components.menu"]);t.module("material.components.menuBar").controller("MenuBarController",r);var e=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];r.$inject=["$scope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"];r.prototype.init=function(){var r=this.$element,u=this.$mdUtil,f=this.$scope,n=this;r.on("keydown",this.handleKeyDown);this.parentToolbar=u.getClosest(r,"MD-TOOLBAR");f.$on("$mdMenuOpen",function(t,i){n.getMenus().indexOf(i[0])!=-1&&(r[0].classList.add("md-open"),i[0].classList.add("md-open"),n.currentlyOpenMenu=i.controller("mdMenu"),n.currentlyOpenMenu.registerContainerProxy(n.handleKeyDown),n.enableOpenOnHover())});f.$on("$mdMenuClose",function(t,f,e){var s=n.getMenus(),o;if(s.indexOf(f[0])!=-1&&(r[0].classList.remove("md-open"),f[0].classList.remove("md-open")),e.closeAll&&r[0].contains(f[0])){for(o=f[0];o&&s.indexOf(o)==-1;)o=u.getClosest(o,"MD-MENU",!0);o&&(e.skipFocus||o.querySelector("button:not([disabled])").focus(),n.currentlyOpenMenu=i,n.disableOpenOnHover(),n.setKeyboardMode(!0))}});t.element(this.getMenus()).on("mouseenter",this.handleMenuHover);this.setKeyboardMode(!0)};r.prototype.setKeyboardMode=function(n){n?this.$element[0].classList.add("md-keyboard-mode"):this.$element[0].classList.remove("md-keyboard-mode")};r.prototype.enableOpenOnHover=function(){if(!this.openOnHoverEnabled){this.openOnHoverEnabled=!0;var n;(n=this.parentToolbar)&&(n.dataset.mdRestoreStyle=n.getAttribute("style"),n.style.position="relative",n.style.zIndex=100)}};r.prototype.handleMenuHover=function(n){this.setKeyboardMode(!1);this.openOnHoverEnabled&&this.scheduleOpenHoveredMenu(n)};r.prototype.disableOpenOnHover=function(){if(this.openOnHoverEnabled){this.openOnHoverEnabled=!1;var n;(n=this.parentToolbar)&&n.setAttribute("style",n.dataset.mdRestoreStyle||"")}};r.prototype.scheduleOpenHoveredMenu=function(n){var i=t.element(n.currentTarget),r=i.controller("mdMenu");this.setKeyboardMode(!1);this.scheduleOpenMenu(r)};r.prototype.scheduleOpenMenu=function(n){var t=this,r=this.$timeout;n!=t.currentlyOpenMenu&&(r.cancel(t.pendingMenuOpen),t.pendingMenuOpen=r(function(){t.pendingMenuOpen=i;t.currentlyOpenMenu&&t.currentlyOpenMenu.close(!0,{closeAll:!0});n.open()},200,!1))};r.prototype.handleKeyDown=function(n){var u=this.$mdConstant.KEY_CODE,i=this.currentlyOpenMenu,o=i&&i.isOpen,r,f,e;this.setKeyboardMode(!0);switch(n.keyCode){case u.DOWN_ARROW:i?i.focusMenuContainer():this.openFocusedMenu();r=!0;break;case u.UP_ARROW:i&&i.close();r=!0;break;case u.LEFT_ARROW:f=this.focusMenu(-1);o&&(e=t.element(f).controller("mdMenu"),this.scheduleOpenMenu(e));r=!0;break;case u.RIGHT_ARROW:f=this.focusMenu(1);o&&(e=t.element(f).controller("mdMenu"),this.scheduleOpenMenu(e));r=!0}r&&(n&&n.preventDefault&&n.preventDefault(),n&&n.stopImmediatePropagation&&n.stopImmediatePropagation())};r.prototype.focusMenu=function(n){var i=this.getMenus(),t=this.getFocusedMenuIndex(),r;return t==-1&&(t=this.getOpenMenuIndex()),r=!1,t==-1?t=0:(n<0&&t>0||n>0&&t<i.length-n)&&(t+=n,r=!0),r?(i[t].querySelector("button").focus(),i[t]):void 0};r.prototype.openFocusedMenu=function(){var n=this.getFocusedMenu();n&&t.element(n).controller("mdMenu").open()};r.prototype.getMenus=function(){var n=this.$element;return this.$mdUtil.nodesToArray(n[0].children).filter(function(n){return n.nodeName=="MD-MENU"})};r.prototype.getFocusedMenu=function(){return this.getMenus()[this.getFocusedMenuIndex()]};r.prototype.getFocusedMenuIndex=function(){var t=this.$mdUtil,n=t.getClosest(this.$document[0].activeElement,"MD-MENU");return n?this.getMenus().indexOf(n):-1};r.prototype.getOpenMenuIndex=function(){for(var t=this.getMenus(),n=0;n<t.length;++n)if(t[n].classList.contains("md-open"))return n;return-1};t.module("material.components.menuBar").directive("mdMenuBar",f);f.$inject=["$mdUtil","$mdTheming"];t.module("material.components.menuBar").directive("mdMenuDivider",o);t.module("material.components.menuBar").controller("MenuItemController",u);u.$inject=["$scope","$element","$attrs"];u.prototype.init=function(n){var i=this.$element,t=this.$attrs;this.ngModel=n;(t.type=="checkbox"||t.type=="radio")&&(this.mode=t.type,this.iconEl=i[0].children[0],this.buttonEl=i[0].children[1],n&&this.initClickListeners())};u.prototype.initClickListeners=function(){function c(){if(h=="radio"){var t=n.ngValue?r.$eval(n.ngValue):n.value;return i.$modelValue==t}return i.$modelValue}function s(n){if(n)e.off("click",o);else e.on("click",o)}var i=this.ngModel,r=this.$scope,n=this.$attrs,u=this.$element,h=this.mode;this.handleClick=t.bind(this,this.handleClick);var f=this.iconEl,e=t.element(this.buttonEl),o=this.handleClick;n.$observe("disabled",s);s(n.disabled);i.$render=function(){c()?(f.style.display="",u.attr("aria-checked","true")):(f.style.display="none",u.attr("aria-checked","false"))};r.$$postDigest(i.$render)};u.prototype.handleClick=function(){var r=this.mode,n=this.ngModel,t=this.$attrs,i;r=="checkbox"?i=!n.$modelValue:r=="radio"&&(i=t.ngValue?this.$scope.$eval(t.ngValue):t.value);n.$setViewValue(i);n.$render()};t.module("material.components.menuBar").directive("mdMenuItem",s)})(window,window.angular);