/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
function MdCheckboxDirective(n,t,i,r,u,f){function o(o,s){s.type="checkbox";s.tabindex=s.tabindex||"0";o.attr("role",s.type);o.on("click",function(n){this.hasAttribute("disabled")&&n.stopImmediatePropagation()});return function(o,s,h,c){function a(n,t,i){h[n]&&o.$watch(h[n],function(n){i[n]&&s.attr(t,i[n])})}function v(n){var t=n.which||n.keyCode;(t===i.KEY_CODE.SPACE||t===i.KEY_CODE.ENTER)&&(n.preventDefault(),s.hasClass("md-focused")||s.addClass("md-focused"),l(n))}function l(n){s[0].hasAttribute("disabled")||o.$apply(function(){var t=h.ngChecked?h.checked:!c.$viewValue;c.$setViewValue(t,n&&n.type);c.$render()})}function y(){c.$viewValue?s.addClass(e):s.removeClass(e)}c=c||u.fakeNgModel();r(s);h.ngChecked&&o.$watch(o.$eval.bind(o,h.ngChecked),c.$setViewValue.bind(c));a("ngDisabled","tabindex",{"true":"-1","false":h.tabindex});t.expectWithText(s,"aria-label");n.link.pre(o,{on:angular.noop,0:{}},h,[c]);o.mouseActive=!1;s.on("click",l).on("keypress",v).on("mousedown",function(){o.mouseActive=!0;f(function(){o.mouseActive=!1},100)}).on("focus",function(){o.mouseActive===!1&&s.addClass("md-focused")}).on("blur",function(){s.removeClass("md-focused")});c.$render=y}}n=n[0];var e="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"><\/div><\/div><div ng-transclude class="md-label"><\/div>',compile:o}}goog.provide("ng.material.components.checkbox");goog.require("ng.material.core");angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",MdCheckboxDirective);MdCheckboxDirective.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"];ng.material.components.checkbox=angular.module("material.components.checkbox");