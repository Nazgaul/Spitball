/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
function MenuBarController(n,t,i,r,u,f,e){this.$element=t;this.$attrs=i;this.$mdConstant=r;this.$mdUtil=f;this.$document=u;this.$scope=n;this.$timeout=e;var o=this;angular.forEach(BOUND_MENU_METHODS,function(n){o[n]=angular.bind(o,o[n])})}function MenuBarDirective(n,t){return{restrict:"E",require:"mdMenuBar",controller:"MenuBarController",compile:function(i,r){return r.ariaRole||i[0].setAttribute("role","menubar"),angular.forEach(i[0].children,function(t){if(t.nodeName=="MD-MENU"){t.hasAttribute("md-position-mode")||t.setAttribute("md-position-mode","left bottom");t.setAttribute("role","menu");var i=n.nodesToArray(t.querySelectorAll("md-menu-content"));angular.forEach(i,function(n){n.classList.add("md-menu-bar-menu");n.classList.add("md-dense");n.hasAttribute("width")||n.setAttribute("width",5)})}}),function(n,i,r,u){t(n,i);u.init()}}}}function MenuDividerDirective(){return{restrict:"E",compile:function(n,t){t.role||n[0].setAttribute("role","separator")}}}function MenuItemController(n,t,i){this.$element=t;this.$attrs=i;this.$scope=n}function MenuItemDirective(){return{require:["mdMenuItem","?ngModel"],compile:function(n,t){function r(t,i){n[0].hasAttribute(t)||n[0].setAttribute(t,i)}function f(t){if(n[0].hasAttribute(t)){var r=n[0].getAttribute(t);i[0].setAttribute(t,r);n[0].removeAttribute(t)}}if(t.type=="checkbox"||t.type=="radio"){var u=n[0].textContent,i=angular.element('<md-button type="button"><\/md-button>');i.html(u);i.attr("tabindex","0");n.html("");n.append(angular.element('<md-icon md-svg-icon="check"><\/md-icon>'));n.append(i);n[0].classList.add("md-indent");r("role",t.type=="checkbox"?"menuitemcheckbox":"menuitemradio");angular.forEach(["ng-disabled"],f)}else r("role","menuitem");return function(n,t,i,r){var u=r[0],f=r[1];u.init(f)}},controller:"MenuItemController"}}goog.provide("ng.material.components.menuBar");goog.require("ng.material.components.menu");goog.require("ng.material.core");angular.module("material.components.menuBar",["material.core","material.components.menu"]);angular.module("material.components.menuBar").controller("MenuBarController",MenuBarController);var BOUND_MENU_METHODS=["handleKeyDown","handleMenuHover","scheduleOpenHoveredMenu","cancelScheduledOpen"];MenuBarController.$inject=["$scope","$element","$attrs","$mdConstant","$document","$mdUtil","$timeout"];MenuBarController.prototype.init=function(){var t=this.$element,i=this.$mdUtil,r=this.$scope,n=this;t.on("keydown",this.handleKeyDown);this.parentToolbar=i.getClosest(t,"MD-TOOLBAR");r.$on("$mdMenuOpen",function(i,r){n.getMenus().indexOf(r[0])!=-1&&(t[0].classList.add("md-open"),r[0].classList.add("md-open"),n.currentlyOpenMenu=r.controller("mdMenu"),n.currentlyOpenMenu.registerContainerProxy(n.handleKeyDown),n.enableOpenOnHover())});r.$on("$mdMenuClose",function(r,u,f){var o=n.getMenus(),e;if(o.indexOf(u[0])!=-1&&(t[0].classList.remove("md-open"),u[0].classList.remove("md-open")),f.closeAll&&t[0].contains(u[0])){for(e=u[0];e&&o.indexOf(e)==-1;)e=i.getClosest(e,"MD-MENU",!0);e&&(f.skipFocus||e.querySelector("button:not([disabled])").focus(),n.currentlyOpenMenu=undefined,n.disableOpenOnHover(),n.setKeyboardMode(!0))}});angular.element(this.getMenus()).on("mouseenter",this.handleMenuHover);this.setKeyboardMode(!0)};MenuBarController.prototype.setKeyboardMode=function(n){n?this.$element[0].classList.add("md-keyboard-mode"):this.$element[0].classList.remove("md-keyboard-mode")};MenuBarController.prototype.enableOpenOnHover=function(){if(!this.openOnHoverEnabled){this.openOnHoverEnabled=!0;var n;(n=this.parentToolbar)&&(n.dataset.mdRestoreStyle=n.getAttribute("style"),n.style.position="relative",n.style.zIndex=100)}};MenuBarController.prototype.handleMenuHover=function(n){this.setKeyboardMode(!1);this.openOnHoverEnabled&&this.scheduleOpenHoveredMenu(n)};MenuBarController.prototype.disableOpenOnHover=function(){if(this.openOnHoverEnabled){this.openOnHoverEnabled=!1;var n;(n=this.parentToolbar)&&n.setAttribute("style",n.dataset.mdRestoreStyle||"")}};MenuBarController.prototype.scheduleOpenHoveredMenu=function(n){var t=angular.element(n.currentTarget),i=t.controller("mdMenu");this.setKeyboardMode(!1);this.scheduleOpenMenu(i)};MenuBarController.prototype.scheduleOpenMenu=function(n){var t=this,i=this.$timeout;n!=t.currentlyOpenMenu&&(i.cancel(t.pendingMenuOpen),t.pendingMenuOpen=i(function(){t.pendingMenuOpen=undefined;t.currentlyOpenMenu&&t.currentlyOpenMenu.close(!0,{closeAll:!0});n.open()},200,!1))};MenuBarController.prototype.handleKeyDown=function(n){var r=this.$mdConstant.KEY_CODE,t=this.currentlyOpenMenu,e=t&&t.isOpen,i,u,f;this.setKeyboardMode(!0);switch(n.keyCode){case r.DOWN_ARROW:t?t.focusMenuContainer():this.openFocusedMenu();i=!0;break;case r.UP_ARROW:t&&t.close();i=!0;break;case r.LEFT_ARROW:u=this.focusMenu(-1);e&&(f=angular.element(u).controller("mdMenu"),this.scheduleOpenMenu(f));i=!0;break;case r.RIGHT_ARROW:u=this.focusMenu(1);e&&(f=angular.element(u).controller("mdMenu"),this.scheduleOpenMenu(f));i=!0}i&&(n&&n.preventDefault&&n.preventDefault(),n&&n.stopImmediatePropagation&&n.stopImmediatePropagation())};MenuBarController.prototype.focusMenu=function(n){var i=this.getMenus(),t=this.getFocusedMenuIndex(),r;return t==-1&&(t=this.getOpenMenuIndex()),r=!1,t==-1?t=0:(n<0&&t>0||n>0&&t<i.length-n)&&(t+=n,r=!0),r?(i[t].querySelector("button").focus(),i[t]):void 0};MenuBarController.prototype.openFocusedMenu=function(){var n=this.getFocusedMenu();n&&angular.element(n).controller("mdMenu").open()};MenuBarController.prototype.getMenus=function(){var n=this.$element;return this.$mdUtil.nodesToArray(n[0].children).filter(function(n){return n.nodeName=="MD-MENU"})};MenuBarController.prototype.getFocusedMenu=function(){return this.getMenus()[this.getFocusedMenuIndex()]};MenuBarController.prototype.getFocusedMenuIndex=function(){var t=this.$mdUtil,n=t.getClosest(this.$document[0].activeElement,"MD-MENU");return n?this.getMenus().indexOf(n):-1};MenuBarController.prototype.getOpenMenuIndex=function(){for(var t=this.getMenus(),n=0;n<t.length;++n)if(t[n].classList.contains("md-open"))return n;return-1};angular.module("material.components.menuBar").directive("mdMenuBar",MenuBarDirective);MenuBarDirective.$inject=["$mdUtil","$mdTheming"];angular.module("material.components.menuBar").directive("mdMenuDivider",MenuDividerDirective);angular.module("material.components.menuBar").controller("MenuItemController",MenuItemController);MenuItemController.$inject=["$scope","$element","$attrs"];MenuItemController.prototype.init=function(n){var i=this.$element,t=this.$attrs;this.ngModel=n;(t.type=="checkbox"||t.type=="radio")&&(this.mode=t.type,this.iconEl=i[0].children[0],this.buttonEl=i[0].children[1],n&&this.initClickListeners())};MenuItemController.prototype.initClickListeners=function(){function h(){if(s=="radio"){var r=n.ngValue?i.$eval(n.ngValue):n.value;return t.$modelValue==r}return t.$modelValue}function o(n){if(n)f.off("click",e);else f.on("click",e)}var t=this.ngModel,i=this.$scope,n=this.$attrs,r=this.$element,s=this.mode;this.handleClick=angular.bind(this,this.handleClick);var u=this.iconEl,f=angular.element(this.buttonEl),e=this.handleClick;n.$observe("disabled",o);o(n.disabled);t.$render=function(){h()?(u.style.display="",r.attr("aria-checked","true")):(u.style.display="none",r.attr("aria-checked","false"))};i.$$postDigest(t.$render)};MenuItemController.prototype.handleClick=function(){var r=this.mode,n=this.ngModel,t=this.$attrs,i;r=="checkbox"?i=!n.$modelValue:r=="radio"&&(i=t.ngValue?this.$scope.$eval(t.ngValue):t.value);n.$setViewValue(i);n.$render()};angular.module("material.components.menuBar").directive("mdMenuItem",MenuItemDirective);ng.material.components.menuBar=angular.module("material.components.menuBar");