/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
function MdDialogDirective(n,t,i){return{restrict:"E",link:function(r,u){t(u);n(function(){function f(){u.toggleClass("md-content-overflow",n.scrollHeight>n.clientHeight)}var t,n=u[0].querySelector("md-dialog-content");if(n){t=n.getElementsByTagName("img");f();angular.element(t).on("load",f)}r.$on("$destroy",function(){i.destroy()})})}}}function MdDialogProvider(n){function t(n,t){return{template:'<md-dialog md-theme="{{ dialog.theme }}" aria-label="{{ dialog.ariaLabel }}" ng-class="dialog.css"> <md-dialog-content class="md-dialog-content" role="document" tabIndex="-1">   <h2 class="md-title">{{ dialog.title }}<\/h2>   <div class="md-dialog-content-body" md-template="::dialog.mdContent"><\/div> <\/md-dialog-content> <div class="md-actions">   <md-button ng-if="dialog.$type == \'confirm\'"     ng-click="dialog.abort()" class="md-primary">     {{ dialog.cancel }}   <\/md-button>   <md-button ng-click="dialog.hide()" class="md-primary" md-autofocus="dialog.$type!=\'confirm\'">     {{ dialog.ok }}   <\/md-button> <\/div><\/md-dialog>'.replace(/\s\s+/g,""),controller:function(){this.hide=function(){n.hide(!0)};this.abort=function(){n.cancel()}},controllerAs:"dialog",bindToController:!0,theme:t.defaultTheme()}}function i(n,t,i,r,u,f,e,o){function h(n,t,r,u){function e(){function u(){var n=t[0].querySelector(".dialog-close"),i;return n||(i=t[0].querySelectorAll(".md-actions button"),n=i[i.length-1]),angular.element(n)}if(r.focusOnOpen){var n=i.findFocusTarget(t)||u();n.focus()}}function o(){if(u){var n=u.content||r.content||"",t=/<\/[\w-]*>/gm.test(n);t||(n=i.supplant("<p>{0}<\/p>",[n]));u.mdContent=n}}return angular.element(f[0].body).addClass("md-dialog-is-showing"),o(),l(t,r),y(t.find("md-dialog"),r),v(n,t,r),w(t,r).then(function(){a(t,r);p(t,r);e()})}function c(n,t,i){function u(){return b(t,i)}function r(){angular.element(f[0].body).removeClass("md-dialog-is-showing");t.remove();i.$destroy||i.origin.focus()}return i.deactivateListeners(),i.unlockScreenReader(),i.hideBackdrop(i.$destroy),!i.$destroy?u().then(r):r()}function l(n,t){var i,u,r;t.origin=angular.extend({element:null,bounds:null,focus:angular.noop},t.origin||{});i=angular.element((t.targetEvent||{}).target);i&&i.length&&(t.origin.element=i,t.origin.bounds=i[0].getBoundingClientRect(),t.origin.focus=function(){i.focus()});angular.isString(t.parent)&&(u=t.parent,r=f[0].querySelectorAll(u),t.parent=r.length?r[0]:null);t.parent=angular.element(t.parent||o)}function a(t,u){var c=angular.element(e),l=i.debounce(function(){s(t,u)},60),h=[],a=function(){var t=u.$type=="alert"?n.hide:n.cancel;i.nextTick(t,!0)},f,o;if(u.escapeToClose){f=u.parent;o=function(n){n.keyCode===r.KEY_CODE.ESCAPE&&(n.stopPropagation(),n.preventDefault(),a())};t.on("keydown",o);f.on("keydown",o);c.on("resize",l);h.push(function(){t.off("keydown",o);f.off("keydown",o);c.off("resize",l)})}if(u.clickOutsideToClose){var f=t,v,y=function(n){v=n.target},p=function(n){v===f[0]&&n.target===f[0]&&(n.stopPropagation(),n.preventDefault(),a())};f.on("mousedown",y);f.on("mouseup",p);h.push(function(){f.off("mousedown",y);f.off("mouseup",p)})}u.deactivateListeners=function(){h.forEach(function(n){n()});u.deactivateListeners=null}}function v(n,t,r){r.disableParentScroll&&(r.restoreScroll=i.disableScrollAround(t,r.parent));r.hasBackdrop&&(r.backdrop=i.createBackdrop(n,"md-dialog-backdrop md-opaque"),u.enter(r.backdrop,r.parent));r.hideBackdrop=function(n){r.backdrop&&(n?r.backdrop.remove():u.leave(r.backdrop));r.disableParentScroll&&(r.restoreScroll(),delete r.restoreScroll);r.hideBackdrop=null}}function y(n,r){var e=r.$type==="alert"?"alertdialog":"dialog",u=n.find("md-dialog-content"),f=n.attr("id")||"dialog_"+i.nextUid();n.attr({role:e,tabIndex:"-1"});u.length===0&&(u=n);u.attr("id",f);n.attr("aria-describedby",f);r.ariaLabel?t.expect(n,"aria-label",r.ariaLabel):t.expectAsync(n,"aria-label",function(){var n=u.text().split(/\s+/);return n.length>3&&(n=n.slice(0,3).concat("...")),n.join(" ")})}function p(n,t){function i(n){for(var u,t;n.parentNode;){if(n===document.body)return;for(u=n.parentNode.children,t=0;t<u.length;t++)n===u[t]||k(u[t],["SCRIPT","STYLE"])||u[t].setAttribute("aria-hidden",r);i(n=n.parentNode)}}var r=!0;i(n[0]);t.unlockScreenReader=function(){r=!1;i(n[0]);t.unlockScreenReader=null}}function s(n,t){var o=e.getComputedStyle(f[0].body).position=="fixed",r=t.backdrop?e.getComputedStyle(t.backdrop[0]):null,u=r?Math.min(f[0].body.clientHeight,Math.ceil(Math.abs(parseInt(r.height,10)))):0;return n.css({top:(o?i.scrollTop(t.parent):0)+"px",height:u?u+"px":"100%"}),n}function w(n,t){t.parent.append(n);s(n,t);var u=n.find("md-dialog"),r=i.dom.animator,f=r.calculateZoomToOrigin,e=r.toTransformCss(f(u,t.origin)),o=r.toTransformCss("");return r.translate3d(u,e,o,{transitionInClass:"md-transition-in",transitionOutClass:"md-transition-out"}).then(function(n){return t.reverseAnimate=function(){return delete t.reverseAnimate,n(r.toTransformCss(f(u,t.origin)))},!0})}function b(n,t){return t.reverseAnimate()}function k(n,t){if(t.indexOf(n.nodeName)!==-1)return!0}return{hasBackdrop:!0,isolateScope:!0,onShow:h,onRemove:c,clickOutsideToClose:!1,escapeToClose:!0,targetEvent:null,focusOnOpen:!0,disableParentScroll:!0,transformTemplate:function(n){function t(n){return n||"",/<\/md-dialog>/g.test(n)?n:"<md-dialog>"+n+"<\/md-dialog>"}return'<div class="md-dialog-container">'+t(n)+"<\/div>"}}}return t.$inject=["$mdDialog","$mdTheming"],i.$inject=["$mdDialog","$mdAria","$mdUtil","$mdConstant","$animate","$document","$window","$rootElement"],n("$mdDialog").setDefaults({methods:["disableParentScroll","hasBackdrop","clickOutsideToClose","escapeToClose","targetEvent","parent"],options:i}).addPreset("alert",{methods:["title","content","ariaLabel","ok","theme","css"],options:t}).addPreset("confirm",{methods:["title","content","ariaLabel","ok","cancel","theme","css"],options:t})}goog.provide("ng.material.components.dialog");goog.require("ng.material.components.backdrop");goog.require("ng.material.core");angular.module("material.components.dialog",["material.core","material.components.backdrop"]).directive("mdDialog",MdDialogDirective).provider("$mdDialog",MdDialogProvider);MdDialogDirective.$inject=["$$rAF","$mdTheming","$mdDialog"];MdDialogProvider.$inject=["$$interimElementProvider"];ng.material.components.dialog=angular.module("material.components.dialog");