/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.11.3
 */
function MdSwitch(n,t,i,r,u,f){function o(n,o){var s=e.compile(n,o);return n.addClass("md-dragging"),function(n,e,o,h){function y(t){l&&l(n)||(t.stopPropagation(),e.addClass("md-dragging"),c={width:a.prop("offsetWidth")},e.removeClass("transition"))}function p(n){if(c){n.stopPropagation();n.srcEvent&&n.srcEvent.preventDefault();var r=n.pointer.distanceX/c.width,t=h.$viewValue?1+r:r;t=Math.max(0,Math.min(1,t));a.css(i.CSS.TRANSFORM,"translate3d("+100*t+"%,0,0)");c.translate=t}}function w(n){if(c){n.stopPropagation();e.removeClass("md-dragging");a.css(i.CSS.TRANSFORM,"");var t=h.$viewValue?c.translate>.5:c.translate<.5;t&&b(!h.$viewValue);c=null}}function b(t){n.$apply(function(){h.$setViewValue(t);h.$render()})}var l,a,v,c;h=h||t.fakeNgModel();l=null;o.disabled!=null?l=function(){return!0}:o.ngDisabled&&(l=r(o.ngDisabled));a=angular.element(e[0].querySelector(".md-thumb-container"));v=angular.element(e[0].querySelector(".md-container"));u(function(){e.removeClass("md-dragging")});s(n,e,o,h);l&&n.$watch(l,function(n){e.attr("tabindex",n?-1:0)});f.register(v,"drag");v.on("$md.dragstart",y).on("$md.drag",p).on("$md.dragend",w)}}var e=n[0];return{restrict:"E",priority:210,transclude:!0,template:'<div class="md-container"><div class="md-bar"><\/div><div class="md-thumb-container"><div class="md-thumb" md-ink-ripple md-ink-ripple-checkbox><\/div><\/div><\/div><div ng-transclude class="md-label"><\/div>',require:"?ngModel",compile:o}}goog.provide("ng.material.components.switch");goog.require("ng.material.components.checkbox");goog.require("ng.material.core");angular.module("material.components.switch",["material.core","material.components.checkbox"]).directive("mdSwitch",MdSwitch);MdSwitch.$inject=["mdCheckboxDirective","$mdUtil","$mdConstant","$parse","$$rAF","$mdGesture"];ng.material.components.switch=angular.module("material.components.switch");