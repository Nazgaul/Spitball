<?xml version="1.0" encoding="utf-8" ?>

<configuration>

  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,
                   Microsoft.Practices.Unity.Configuration" />

    <!--, Version=2.0.414.0,
    Culture=neutral, PublicKeyToken=31bf3856ad364e35-->
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <!-- Interfaces -->

    <alias alias="IRepository" type="Zbang.Zbox.Infrastructure.Repositories.IRepository`1,Zbang.Zbox.Infrastructure"/>

    <alias alias="IUserRepository" type="Zbang.Zbox.Domain.DataAccess.IUserRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="IUserBoxRelRepository" type="Zbang.Zbox.Domain.DataAccess.IUserBoxRelRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="ITagRepository" type="Zbang.Zbox.Domain.DataAccess.ITagRepository,Zbang.Zbox.Domain.DataAccess"/>
    <!--<alias alias="IProfessorRepository" type="Zbang.Zbox.Domain.DataAccess.IProfessorRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="IDepartmentRepository" type="Zbang.Zbox.Domain.DataAccess.IDepartmentRepository,Zbang.Zbox.Domain.DataAccess"/>-->
    <alias alias="IUniversityRepository" type="Zbang.Zbox.Domain.DataAccess.IUniversityRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="IBoxRepository" type="Zbang.Zbox.Domain.DataAccess.IBoxRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="IAcademicBoxRepository" type="Zbang.Zbox.Domain.DataAccess.IAcademicBoxRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="IActionRepository" type="Zbang.Zbox.Domain.DataAccess.IActionRepository,Zbang.Zbox.Domain.DataAccess"/>

    <alias alias="IZboxWriteService" type="Zbang.Zbox.Domain.Common.IZboxWriteService,Zbang.Zbox.Domain.Common"/>
    <alias alias="IZboxReadService" type="Zbang.Zbox.ReadServices.IZboxReadService,Zbang.Zbox.ReadServices"/>
    <alias alias="IZboxApiReadService" type="Zbang.Zbox.ReadServices.IZboxApiReadService,Zbang.Zbox.ReadServices"/>
    <!--<alias alias="IZboxCacheService" type="Zbang.Zbox.Domain.Common.IZboxCacheService,Zbang.Zbox.Domain.Common"/>-->

    <alias alias="ICommand"
           type="Zbang.Zbox.Infrastructure.Commands.ICommand,Zbang.Zbox.Infrastructure"/>

    <alias alias="ICommandResult"
           type="Zbang.Zbox.Infrastructure.Commands.ICommandResult,Zbang.Zbox.Infrastructure"/>

    <alias alias="IHandle" type="Zbang.Zbox.Infrastructure.CommandHandlers.ICommandHandler`1,Zbang.Zbox.Infrastructure" />
    <alias alias="ICommandHandler"
           type="Zbang.Zbox.Infrastructure.CommandHandlers.ICommandHandler`2,Zbang.Zbox.Infrastructure"/>

    <alias alias="IGenericCommandHandler"
       type="Zbang.Zbox.Infrastructure.CommandHandlers.IGenericCommandHandler`3,Zbang.Zbox.Infrastructure"/>

    <alias alias="ICommandBus"
           type="Zbang.Zbox.Infrastructure.CommandHandlers.ICommandBus,Zbang.Zbox.Infrastructure"/>

    <alias alias="IMailManager"
        type="Zbang.Zbox.Infrastructure.Mail.IMailManager,Zbang.Zbox.Infrastructure"/>

    <alias alias="ICache"
           type="Zbang.Zbox.Infrastructure.Cache.ICache,Zbang.Zbox.Infrastructure"/>

    <alias alias="IWithCache"
          type="Zbang.Zbox.Infrastructure.Cache.IWithCache,Zbang.Zbox.Infrastructure"/>

    <alias alias="IShortCodesCache"
             type="Zbang.Zbox.Infrastructure.ShortUrl.IShortCodesCache,Zbang.Zbox.Infrastructure"/>


    <alias alias="IMembershipService"
           type="Zbang.Zbox.Infrastructure.Security.IMembershipService,Zbang.Zbox.Infrastructure"/>

    <alias alias="IFacebookAuthenticationService" type="Zbang.Zbox.Infrastructure.Security.IFacebookAuthenticationService,Zbang.Zbox.Infrastructure"/>

    <alias alias="IFormsAuthenticationService"
           type="Zbang.Zbox.Infrastructure.Security.IFormsAuthenticationService,Zbang.Zbox.Infrastructure"/>

    <alias alias="IThumbnailProvider"
           type="Zbang.Zbox.Infrastructure.Thumbnail.IThumbnailProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="IBlobProvider"
           type="Zbang.Zbox.Infrastructure.Storage.IBlobProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="IFileConvertFactory" type="Zbang.Zbox.Infrastructure.WebWorkerRoleJoinData.FileConvert.IFileConvertFactory,Zbang.Zbox.Infrastructure"/>

    <alias alias="IQueueProvider"
           type="Zbang.Zbox.Infrastructure.Storage.IQueueProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="ILocalStorageProvider"
           type="Zbang.Zbox.Infrastructure.Storage.ILocalStorageProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="IProfilePictureProvider"
           type="Zbang.Zbox.Infrastructure.Profile.IProfilePictureProvider,Zbang.Zbox.Infrastructure"/>

    <!-- Implementations -->

    <alias alias="NHibernateRepository"
           type="Zbang.Zbox.Infrastructure.Data.Repositories.NHibernateRepository`1,Zbang.Zbox.Infrastructure.Data"/>

    <alias alias="UserRepository"
           type="Zbang.Zbox.Domain.DataAccess.UserRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="UserBoxRelRepository"
          type="Zbang.Zbox.Domain.DataAccess.UserBoxRelRepository,Zbang.Zbox.Domain.DataAccess"/>

    <alias alias="TagRepository" type="Zbang.Zbox.Domain.DataAccess.TagRepository,Zbang.Zbox.Domain.DataAccess"/>
    <!--<alias alias="ProfessorRepository" type="Zbang.Zbox.Domain.DataAccess.ProfessorRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="DepartmentRepository" type="Zbang.Zbox.Domain.DataAccess.DepartmentRepository,Zbang.Zbox.Domain.DataAccess"/>-->
    <alias alias="UniversityRepository" type="Zbang.Zbox.Domain.DataAccess.UniversityRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="BoxRepository" type="Zbang.Zbox.Domain.DataAccess.BoxRepository,Zbang.Zbox.Domain.DataAccess"/>
    <alias alias="AcademicBoxRepository" type="Zbang.Zbox.Domain.DataAccess.AcademicBoxRepository,Zbang.Zbox.Domain.DataAccess"/>

    <alias alias="ActionRepository" type="Zbang.Zbox.Domain.DataAccess.ActionRepository,Zbang.Zbox.Domain.DataAccess"/>

    <alias alias="ZboxWriteService" type="Zbang.Zbox.Domain.Services.ZboxWriteService,Zbang.Zbox.Domain.Services"/>
    <alias alias="ZboxReadService" type="Zbang.Zbox.ReadServices.ZboxReadService,Zbang.Zbox.ReadServices"/>
    <alias alias="ZboxApiReadService" type="Zbang.Zbox.ReadServices.ZboxApiReadService,Zbang.Zbox.ReadServices"/>

    <!--<alias alias="ZboxCacheServiceDecorator"
          type="Zbang.Zbox.Domain.Services.ZboxCacheServiceDecorator,Zbang.Zbox.Domain.Services"/>-->

    <alias alias="CommandBus"
           type="Zbang.Zbox.Infrastructure.CommandHandlers.CommandBus,Zbang.Zbox.Infrastructure"/>

    <alias alias="MailManager"
        type="Zbang.Zbox.Infrastructure.Mail.MailManager,Zbang.Zbox.Infrastructure"/>

    <alias alias="Cache"
          type="Zbang.Zbox.Infrastructure.Cache.Cache,Zbang.Zbox.Infrastructure"/>

    <alias alias="WithCache"
          type="Zbang.Zbox.Infrastructure.Cache.WithCache,Zbang.Zbox.Infrastructure"/>

    <alias alias="ShortCodesCache" type="Zbang.Zbox.Infrastructure.ShortUrl.ShortCodesCache,Zbang.Zbox.Infrastructure"/>
    <alias alias="FileConvertFactory" type="Zbang.Zbox.Infrastructure.WebWorkerRoleJoinData.FileConvert.FileConvertFactory,Zbang.Zbox.Infrastructure"/>
    <alias alias="ThumbnailProvider"
           type="Zbang.Zbox.Infrastructure.Thumbnail.ThumbnailProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="BlobProvider"
           type="Zbang.Zbox.Infrastructure.Storage.BlobProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="QueueProvider" type="Zbang.Zbox.Infrastructure.Storage.QueueProvider,Zbang.Zbox.Infrastructure"/>
    <alias alias="LocalStorageProvider" type="Zbang.Zbox.Infrastructure.Storage.LocalStorageProvider,Zbang.Zbox.Infrastructure"/>
    <alias alias="ProfilePictureProvider" type="Zbang.Zbox.Infrastructure.Profile.ProfilePictureProvider,Zbang.Zbox.Infrastructure"/>

    <alias alias="AccountMembershipService" type="Zbang.Zbox.Infrastructure.Security.AccountMembershipService,Zbang.Zbox.Infrastructure"/>

    <alias alias="FacebookAuthenticationService" type="Zbang.Zbox.Infrastructure.Security.FacebookAuthenticationService,Zbang.Zbox.Infrastructure"/>

    <alias alias="FormsAuthenticationService" type="Zbang.Zbox.Infrastructure.Security.FormsAuthenticationService,Zbang.Zbox.Infrastructure"/>


    <alias alias="CreateUserCommand"  type="Zbang.Zbox.Domain.Commands.CreateUserCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="CreateUserCommandResult"
           type="Zbang.Zbox.Domain.Commands.CreateUserCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="CreateFacebookUserCommandHandler"
          type="Zbang.Zbox.Domain.CommandHandlers.CreateFacebookUserCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="CreateMembershipUserCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.CreateMembershipUserCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>


    <alias alias="UpdateUserPasswordCommand" type="Zbang.Zbox.Domain.Commands.UpdateUserPasswordCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="UpdateUserCommandResult" type="Zbang.Zbox.Domain.Commands.UpdateUserCommandResult,Zbang.Zbox.Domain.Commands"/>


    <alias alias="UpdateUserPasswordCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.UpdateUserPasswordCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>




    <alias alias="UpdateUserEmailCommand"
      type="Zbang.Zbox.Domain.Commands.UpdateUserEmailCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="UpdateUserEmailCommandHandler"
          type="Zbang.Zbox.Domain.CommandHandlers.UpdateUserEmailCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="UpdateUserProfileCommand" type="Zbang.Zbox.Domain.Commands.UpdateUserProfileCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="UpdateUserProfileCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.UpdateUserProfileCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="UpdateUserLanguageCommand" type="Zbang.Zbox.Domain.Commands.UpdateUserLanguageCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="UpdateUserLanguageCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.UpdateUserLanguageCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>



    <alias alias="CreateBoxCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.CreateBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="CreateBoxCommand"
           type="Zbang.Zbox.Domain.Commands.CreateBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="CreateBoxCommandResult"
           type="Zbang.Zbox.Domain.Commands.CreateBoxCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="CreateAcademicBoxCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.CreateAcademicBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="CreateAcademicBoxCommand" type="Zbang.Zbox.Domain.Commands.CreateAcademicBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeBoxNameCommandHandler"
          type="Zbang.Zbox.Domain.CommandHandlers.ChangeBoxNameCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="ChangeBoxNameCommand"
           type="Zbang.Zbox.Domain.Commands.ChangeBoxNameCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeBoxPrivacySettingsCommandHandler"
          type="Zbang.Zbox.Domain.CommandHandlers.ChangeBoxPrivacySettingsCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="ChangeBoxPrivacySettingsCommand"
           type="Zbang.Zbox.Domain.Commands.ChangeBoxPrivacySettingsCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeBoxPrivacySettingsCommandResult"
           type="Zbang.Zbox.Domain.Commands.ChangeBoxPrivacySettingsCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeNotificationSettingsCommandHandler"
       type="Zbang.Zbox.Domain.CommandHandlers.ChangeNotificationSettingsCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="ChangeNotificationSettingsCommand"
           type="Zbang.Zbox.Domain.Commands.ChangeNotificationSettingsCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="DeleteBoxCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.DeleteBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteBoxCommand"
           type="Zbang.Zbox.Domain.Commands.DeleteBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddFileToBoxCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.AddFileToBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="AddFileToBoxCommand"
           type="Zbang.Zbox.Domain.Commands.AddFileToBoxCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="UpdateThumbnailCommandHandler"
         type="Zbang.Zbox.Domain.CommandHandlers.UpdateThumbnailCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="UpdateThumbnailCommand"
      type="Zbang.Zbox.Domain.Commands.UpdateThumbnailCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="UpdateFileCommandHandler"
        type="Zbang.Zbox.Domain.CommandHandlers.UpdateFileCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="UpdateFileCommand"
      type="Zbang.Zbox.Domain.Commands.UpdateFileCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="ChangeFileNameCommandHandler"
        type="Zbang.Zbox.Domain.CommandHandlers.ChangeFileNameCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="ChangeFileNameCommand"
           type="Zbang.Zbox.Domain.Commands.ChangeFileNameCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeFileNameCommandResult"
           type="Zbang.Zbox.Domain.Commands.ChangeFileNameCommandResult,Zbang.Zbox.Domain.Commands"/>


    <alias alias="AddFileToBoxCommandResult"
           type="Zbang.Zbox.Domain.Commands.AddFileToBoxCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddLinkToBoxCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.AddLinkToBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="AddLinkToBoxCommand"
           type="Zbang.Zbox.Domain.Commands.AddLinkToBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddLinkToBoxCommandResult"
           type="Zbang.Zbox.Domain.Commands.AddLinkToBoxCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="SubscribeToSharedBoxCommandHandler"
         type="Zbang.Zbox.Domain.CommandHandlers.SubscribeToSharedBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="SubscribeToSharedBoxCommand"
           type="Zbang.Zbox.Domain.Commands.SubscribeToSharedBoxCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="DeleteItemCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.DeleteItemCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteItemCommand"
           type="Zbang.Zbox.Domain.Commands.DeleteItemCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="DeleteUserFromBoxCommandHandler"
         type=" Zbang.Zbox.Domain.CommandHandlers.DeleteUserFromBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteUserFromBoxCommand"
         type=" Zbang.Zbox.Domain.Commands.DeleteUserFromBoxCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="DeleteSubscriptionFromBoxCommandHandler"
        type=" Zbang.Zbox.Domain.CommandHandlers.DeleteSubscriptionFromBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteSubscriptionFromBoxCommand"
         type=" Zbang.Zbox.Domain.Commands.DeleteSubscriptionFromBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="DeleteSubscriptionFromBoxCommandResult"
         type=" Zbang.Zbox.Domain.Commands.DeleteSubscriptionFromBoxCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="RemoveFriendFromUserCommandHandler"
      type="Zbang.Zbox.Domain.CommandHandlers.RemoveFriendFromUserCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="RemoveFriendFromUserCommand"
           type="Zbang.Zbox.Domain.Commands.RemoveFriendFromUserCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="RemoveFriendFromUserCommandResult"
           type="Zbang.Zbox.Domain.Commands.RemoveFriendFromUserCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ShareBoxCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.ShareBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="ShareBoxCommand"
           type="Zbang.Zbox.Domain.Commands.ShareBoxCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="VerifyEmailCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.VerifyEmailCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="VerifyEmailCommand"
           type="Zbang.Zbox.Domain.Commands.VerifyEmailCommand,Zbang.Zbox.Domain.Commands"/>


    <alias alias="AddBoxCommentCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.AddBoxCommentCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="AddBoxCommentCommand"
           type="Zbang.Zbox.Domain.Commands.AddBoxCommentCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddBoxCommentCommandResult"
           type="Zbang.Zbox.Domain.Commands.AddBoxCommentCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddItemCommentCommandHandler"
          type="Zbang.Zbox.Domain.CommandHandlers.AddItemCommentCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="AddItemCommentCommand"
           type="Zbang.Zbox.Domain.Commands.AddItemCommentCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddItemCommentCommandResult"
           type="Zbang.Zbox.Domain.Commands.AddItemCommentCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddReplyToCommentCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.AddReplyToCommentCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="AddReplyToCommentCommand"
           type="Zbang.Zbox.Domain.Commands.AddReplyToCommentCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddReplyToCommentCommandResult"
           type="Zbang.Zbox.Domain.Commands.AddReplyToCommentCommandResult,Zbang.Zbox.Domain.Commands"/>

    <alias alias="DeleteCommentCommandHandler"
           type="Zbang.Zbox.Domain.CommandHandlers.DeleteCommentCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteCommentCommand"
           type="Zbang.Zbox.Domain.Commands.DeleteCommentCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddTagToBoxCommand" type="Zbang.Zbox.Domain.Commands.AddTagToBoxCommand,Zbang.Zbox.Domain.Commands"/>
    <alias alias="AddTagToBoxCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.AddTagToBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="DeleteTagFromBoxCommand" type="Zbang.Zbox.Domain.Commands.DeleteTagFromBoxCommand,Zbang.Zbox.Domain.Commands"/>
    <alias alias="DeleteTagFromBoxCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.DeleteTagFromBoxCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>

    <alias alias="SendMessageToEmailCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.SendMessageToEmailCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>
    <alias alias="SendMessageToEmailCommand" type="Zbang.Zbox.Domain.Commands.SendMessageToEmailCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="AddFriendCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.AddFriendCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>
    <alias alias="AddFriendCommand" type="Zbang.Zbox.Domain.Commands.AddFriendCommand,Zbang.Zbox.Domain.Commands"/>

    <alias alias="ChangeBoxNotificationSettingsCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.ChangeBoxNotificationSettingsCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>
    <alias alias="ChangeBoxNotificationSettingsCommand" type="Zbang.Zbox.Domain.Commands.ChangeBoxNotificationSettingsCommand,Zbang.Zbox.Domain.Commands"/>
    
    <!--library-->
    <alias alias="AddNodeToLibraryCommandHandler" type="Zbang.Zbox.Domain.CommandHandlers.AddNodeToLibraryCommandHandler,Zbang.Zbox.Domain.CommandHandlers"/>
    <alias alias="AddNodeToLibraryCommand" type="Zbang.Zbox.Domain.Commands.AddNodeToLibraryCommand,Zbang.Zbox.Domain.Commands"/>
    <!--Mails-->

    <alias alias="IMailBuilderBase" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.IBase,Zbang.Zbox.Infrastructure"/>

    <alias alias="MailBuilderBase" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.Base,Zbang.Zbox.Infrastructure"/>

    <alias alias="MailBuilderRegister" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.Register,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderPasswordRecovery" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.PasswordRecovery,Zbang.Zbox.Infrastructure"/>

    <alias alias="MailBuilderInviteToBox" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.InviteToBox,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderSubscription" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.Subscription,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderUpdates" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.Updates,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderBoxItemDeleted" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.BoxItemDeleted,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderChangeEmail" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.ChangeEmail,Zbang.Zbox.Infrastructure"/>
    <alias alias="MailBuilderDigest" type="Zbang.Zbox.Infrastructure.Mail.MailBuilder.Digest,Zbang.Zbox.Infrastructure"/>


    <alias alias="PerHttpRequestLifetime" type="Zbang.Zbox.Infrastructure.Web.Ioc.PerHttpRequestLifetime,Zbang.Zbox.Infrastructure.Web"/>


    <container>
      <register type="IMailBuilderBase"
               mapTo="MailBuilderRegister" name="EmailVerification">
        <lifetime type="PerHttpRequestLifetime"/>

      </register>

      <register type="IMailBuilderBase"
              mapTo="MailBuilderChangeEmail" name="ChangeEmail">
        <lifetime type="PerHttpRequestLifetime"/>

      </register>
      <register type="IMailBuilderBase"
             mapTo="MailBuilderDigest" name="Digest">
        <lifetime type="PerHttpRequestLifetime"/>

      </register>

      <register type="IMailBuilderBase"
               mapTo="MailBuilderUpdates" name="Updates">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IMailBuilderBase"
              mapTo="MailBuilderBoxItemDeleted" name="ItemDelete">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IMailBuilderBase"
               mapTo="MailBuilderInviteToBox" name="InviteToBox">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IMailBuilderBase"
              mapTo="MailBuilderSubscription" name="SubscribeToSharedBox">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IMailBuilderBase"
              mapTo="MailBuilderPasswordRecovery" name="ForgotPassword">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>


      <register type="ICache"
             mapTo="Cache">
        <lifetime type="singleton"/>
      </register>

      <register type="IWithCache"
             mapTo="WithCache">
        <lifetime type="singleton"/>
        <constructor>
          <param name="cache">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IShortCodesCache" mapTo="ShortCodesCache">
        <lifetime type="singleton"/>
        <!--<constructor>
          <param name="cache">
            <dependency/>
          </param>
          <param name="container">
            <dependency/>
          </param>
        </constructor>-->
      </register>

      <register type="IRepository"
                mapTo="NHibernateRepository">
      </register>

      <register type="IUserRepository"
          mapTo="UserRepository">
      </register>
      <register type="IUserBoxRelRepository"
                mapTo="UserBoxRelRepository">
      </register>
      <register type="IBoxRepository"
               mapTo="BoxRepository">
      </register>

      <register type="ITagRepository"
              mapTo="TagRepository">
      </register>
      
      <register type="IUniversityRepository"
                   mapTo="UniversityRepository">
      </register>
      <register type="IAcademicBoxRepository"
                   mapTo="AcademicBoxRepository">
      </register>

      <register type="IActionRepository"
              mapTo="ActionRepository">
      </register>

      <register type="IFileConvertFactory" mapTo="FileConvertFactory">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="ICommandBus"
                mapTo="CommandBus">
        <lifetime type="PerHttpRequestLifetime"/>

        <constructor>
          <param name="container">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IMailManager"
                mapTo="MailManager">
        <lifetime type="PerHttpRequestLifetime"/>
        <constructor>
          <param name="container">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IThumbnailProvider"
                mapTo="ThumbnailProvider">
        <lifetime type="singleton"/>
        <constructor>
          <param name="blobProvider">
            <dependency/>
          </param>
          <param name="fileConvertor">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IBlobProvider"
                mapTo="BlobProvider">
        <lifetime type="singleton"/>
      </register>

      <register type="IProfilePictureProvider"
                mapTo="ProfilePictureProvider">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="ILocalStorageProvider"
               mapTo="LocalStorageProvider">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IQueueProvider"
                mapTo="QueueProvider">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IMembershipService"
                mapTo="AccountMembershipService">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IFacebookAuthenticationService"
                mapTo="FacebookAuthenticationService">
        <lifetime type="PerHttpRequestLifetime"/>
      </register>

      <register type="IFormsAuthenticationService"
                mapTo="FormsAuthenticationService">
      </register>

      <register type="IZboxWriteService"
                mapTo="ZboxWriteService">
        <lifetime type="PerHttpRequestLifetime"/>
        <constructor>
          <param name="commandBus">
            <dependency/>
          </param>
          <param name="profileProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IZboxReadService"
               mapTo="ZboxReadService">
        <lifetime type="PerHttpRequestLifetime"/>
        <constructor>
        </constructor>
      </register>

      <register type="IZboxApiReadService"
              mapTo="ZboxApiReadService">
        <lifetime type="PerHttpRequestLifetime"/>
        <constructor>
        </constructor>
      </register>

      <!--<register type="IZboxCacheService"
                mapTo="ZboxCacheServiceDecorator">
        <lifetime type="singleton"/>
        <constructor>          
          <param name="withCache">
            <dependency/>
          </param>
          <param name="zboxService">
            <dependency/>
          </param>
        </constructor>
      </register>-->



      <register type="ICommandHandler[CreateUserCommand,CreateUserCommandResult]"
                mapTo="CreateMembershipUserCommandHandler" name="Membership">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userBoxRelationshipRepository">
            <dependency/>
          </param>
          <param name="profileProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[CreateUserCommand,CreateUserCommandResult]"
               mapTo="CreateFacebookUserCommandHandler" name="Facebook">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userBoxRelationshipRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[UpdateUserPasswordCommand,UpdateUserCommandResult]"
               mapTo="UpdateUserPasswordCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="membershipService">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[UpdateUserEmailCommand]"
               mapTo="UpdateUserEmailCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="membershipService">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[UpdateUserProfileCommand]"
              mapTo="UpdateUserProfileCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="universityRepository">
            <dependency/>
          </param>
          <param name="profilePictureProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[CreateBoxCommand,CreateBoxCommandResult]"
                mapTo="CreateBoxCommandHandler" name="CreateBoxCommand">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="userBoxRel">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[CreateBoxCommand,CreateBoxCommandResult]"
                mapTo="CreateAcademicBoxCommandHandler" name="CreateAcademicBoxCommand">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="userBoxRelRepository">
            <dependency/>
          </param>
          <param name="libraryRepository">
            <dependency/>
          </param>
          <param name="academicRepository">
            <dependency/>
          </param>
          <param name="profilePictureProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[ChangeBoxNameCommand]"
               mapTo="ChangeBoxNameCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>


      <register type="ICommandHandler[ChangeBoxPrivacySettingsCommand,ChangeBoxPrivacySettingsCommandResult]"
                mapTo="ChangeBoxPrivacySettingsCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[ChangeNotificationSettingsCommand]"
                mapTo="ChangeNotificationSettingsCommandHandler">
        <constructor>
          <param name="userboxRelationshipRepository">
            <dependency/>
          </param>
        </constructor>
      </register>


      <register type="IHandle[DeleteBoxCommand]"
                mapTo="DeleteBoxCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="blobProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[AddFileToBoxCommand,AddFileToBoxCommandResult]"
                mapTo="AddFileToBoxCommandHandler">
        <constructor>
          <param name="queueProvider">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="actionRepository">
            <dependency/>
          </param>
          <param name="itemRepository">
            <dependency/>
          </param>

        </constructor>
      </register>


      <register type="ICommandHandler[ChangeFileNameCommand,ChangeFileNameCommandResult]"
              mapTo="ChangeFileNameCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="itemRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[UpdateThumbnailCommand]"
              mapTo="UpdateThumbnailCommandHandler">
        <constructor>
          <param name="itemRepository">
            <dependency/>
          </param>
        </constructor>
      </register>



      <register type="ICommandHandler[AddLinkToBoxCommand,AddLinkToBoxCommandResult]"
               mapTo="AddLinkToBoxCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="queueProvider">
            <dependency/>
          </param>
          <param name="itemRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[DeleteItemCommand]"
                mapTo="DeleteItemCommandHandler">
        <constructor>
          <param name="queueProvider">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="blobProvider">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="actionRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[SubscribeToSharedBoxCommand]"
           mapTo="SubscribeToSharedBoxCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="userBoxRelRepository">
            <dependency/>
          </param>
          <param name="queueProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[DeleteUserFromBoxCommand]"
                mapTo="DeleteUserFromBoxCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[ShareBoxCommand]"
                mapTo="ShareBoxCommandHandler">
        <constructor>
          <param name="queueProvider">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="shortCodesCache">
            <dependency/>
          </param>
          <param name="profilePictureProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[VerifyEmailCommand]"
                mapTo="VerifyEmailCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[AddBoxCommentCommand,AddBoxCommentCommandResult]"
              mapTo="AddBoxCommentCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[AddItemCommentCommand,AddItemCommentCommandResult]"
              mapTo="AddItemCommentCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="itemRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="ICommandHandler[AddReplyToCommentCommand,AddReplyToCommentCommandResult]"
             mapTo="AddReplyToCommentCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="targetRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[DeleteCommentCommand]"
                mapTo="DeleteCommentCommandHandler">
        <constructor>
          <param name="commentRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[AddTagToBoxCommand]"
              mapTo="AddTagToBoxCommandHandler">
        <constructor>
          <param name="boxRepository">
            <dependency/>
          </param>
          <param name="tagRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[DeleteTagFromBoxCommand]"
              mapTo="DeleteTagFromBoxCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="boxRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[SendMessageToEmailCommand]"
             mapTo="SendMessageToEmailCommandHandler">
        <constructor>
          <param name="queueProvider">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="shortCodesCache">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[UpdateFileCommand]"
             mapTo="UpdateFileCommandHandler">
        <constructor>
          <param name="itemRepository">
            <dependency/>
          </param>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="queueProvider">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[AddFriendCommand]"
            mapTo="AddFriendCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[ChangeBoxNotificationSettingsCommand]"
           mapTo="ChangeBoxNotificationSettingsCommandHandler">
        <constructor>
          <param name="userBoxRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <register type="IHandle[UpdateUserLanguageCommand]"
           mapTo="UpdateUserLanguageCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
        </constructor>
      </register>

      <!--library-->
      <register type="IHandle[AddNodeToLibraryCommand]"
           mapTo="AddNodeToLibraryCommandHandler">
        <constructor>
          <param name="userRepository">
            <dependency/>
          </param>
          <param name="libraryRepository">
            <dependency/>
          </param>
        </constructor>
      </register>
    </container>

  </unity>

</configuration>
