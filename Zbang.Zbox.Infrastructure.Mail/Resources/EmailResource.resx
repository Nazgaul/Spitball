<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="answer" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="answers" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="InviteSubject" xml:space="preserve">
    <value>Invite to {0}</value>
  </data>
  <data name="item" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="items" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="question" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="questions" xml:space="preserve">
    <value>Posts</value>
  </data>
  <data name="WelcomeSubject" xml:space="preserve">
    <value>Welcome to Spitball</value>
  </data>
  <data name="NoUniversityText" xml:space="preserve">
    <value>We are so happy that you have chosen Spitball, but it works best for you when you have selected a school! 
Once you select your school, you can follow or create the courses 
you are enrolled in. 
From there, you can message your classmates directly with questions on homework, share and compare uploaded notes, create quizzes and more! 
Log in to pick your school and find your courses now!</value>
  </data>
  <data name="NoFollowBoxText" xml:space="preserve">
    <value>Spitball’s course listing is always expanding and open to everyone. 
Search for courses made by your classmates to start sharing notes and quizzes. 
If you can’t find your course, make Spitball that much more useful by creating it!</value>
  </data>
  <data name="NoUniversitySubject" xml:space="preserve">
    <value>Selecting Your School</value>
  </data>
  <data name="NoFollowBoxSubject" xml:space="preserve">
    <value>Find your courses</value>
  </data>
  <data name="CoursesLowActivitySubject" xml:space="preserve">
    <value>Getting Your Class Online</value>
  </data>
  <data name="UniversityLowActivityText" xml:space="preserve">
    <value>Your university’s Spitball page needs a little work… Be the study pioneer your classmates need and start uploading notes and inviting classmates to join you via email.</value>
  </data>
  <data name="UniversityLowActivitySubject" xml:space="preserve">
    <value>Finding classmates, Uploading Notes</value>
  </data>
  <data name="CoursesLowActivityText" xml:space="preserve">
    <value>Ever notice how your courses never has anything posted in it? 
Change that by inviting a classmate via Facebook or email and uploading a doc that you want them to see.</value>
  </data>
  <data name="LikesMailFooter" xml:space="preserve">
    <value>Your esteemed classmates hold your Spitball posts in the highest regard. Keep posting documents, quizzes, and comments to improve Spitball for everyone.</value>
  </data>
  <data name="LikesMailLineDetails" xml:space="preserve">
    <value>{0} likes your {1} "{2}"</value>
  </data>
  <data name="LikesMailSubject" xml:space="preserve">
    <value>You Have New Likes on Spitball</value>
  </data>
  <data name="LikesMailTitle" xml:space="preserve">
    <value>You have {0} more likes on your Spitball posts, check them out:</value>
  </data>
  <data name="ReplyToCommentSubject" xml:space="preserve">
    <value>Someone commented on your post</value>
  </data>
  <data name="LowContributionSubject" xml:space="preserve">
    <value>Become a Spitball Expert (It’s Easier Than You Think)</value>
  </data>
  <data name="LowContributionText" xml:space="preserve">
    <value>We have helped thousands of students make studying online easier and faster, but we are only as good as our user uploads! 
Login into your Spitball account and invite classmates or post your notes to push our service to the next level.</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Updates" xml:space="preserve">
    <value>Updates</value>
  </data>
</root>